"use strict";(self.webpackChunksample_website=self.webpackChunksample_website||[]).push([[2538],{5680:(e,t,n)=>{n.d(t,{xA:()=>d,yg:()=>u});var a=n(6540);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},d=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},g=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=c(n),g=i,u=p["".concat(l,".").concat(g)]||p[g]||m[g]||o;return n?a.createElement(u,r(r({ref:t},d),{},{components:n})):a.createElement(u,r({ref:t},d))}));function u(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,r=new Array(o);r[0]=g;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:i,r[1]=s;for(var c=2;c<o;c++)r[c]=n[c];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}g.displayName="MDXCreateElement"},4377:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var a=n(8168),i=(n(6540),n(5680));const o={title:"Version 4.6.0",sidebar_label:"4.6.0 (February 7, 2023)",sidebar_position:101,toc_max_heading_level:4},r=void 0,s={unversionedId:"changelog/4.6.0",id:"changelog/4.6.0",title:"Version 4.6.0",description:"February 7, 2023",source:"@site/docs/changelog/4.6.0.md",sourceDirName:"changelog",slug:"/changelog/4.6.0",permalink:"/docs/v4/changelog/4.6.0",draft:!1,editUrl:"https://github.com/socketio/nhonvo.github.io/edit/main/docs/changelog/4.6.0.md",tags:[],version:"current",lastUpdatedAt:1679932954,formattedLastUpdatedAt:"Mar 27, 2023",sidebarPosition:101,frontMatter:{title:"Version 4.6.0",sidebar_label:"4.6.0 (February 7, 2023)",sidebar_position:101,toc_max_heading_level:4},sidebar:"changelogSidebar",previous:{title:"4.6.1 (February 20, 2023)",permalink:"/docs/v4/changelog/4.6.1"},next:{title:"4.5.4 (November 22, 2022)",permalink:"/docs/v4/changelog/4.5.4"}},l={},c=[{value:"Server",id:"server",level:2},{value:"Bug Fixes",id:"bug-fixes",level:3},{value:"Features",id:"features",level:3},{value:"Promise-based acknowledgements",id:"promise-based-acknowledgements",level:4},{value:"Connection state recovery",id:"connection-state-recovery",level:4},{value:"Compatibility (for real) with Express middlewares",id:"compatibility-for-real-with-express-middlewares",level:4},{value:"Error details in the disconnecting and disconnect events",id:"error-details-in-the-disconnecting-and-disconnect-events",level:4},{value:"Automatic removal of empty child namespaces",id:"automatic-removal-of-empty-child-namespaces",level:4},{value:"A new &quot;addTrailingSlash&quot; option",id:"a-new-addtrailingslash-option",level:4},{value:"Performance Improvements",id:"performance-improvements",level:3},{value:"Dependencies",id:"dependencies",level:3},{value:"Client",id:"client",level:2},{value:"Bug Fixes",id:"bug-fixes-1",level:3},{value:"Features",id:"features-1",level:3},{value:"A new &quot;addTrailingSlash&quot; option",id:"a-new-addtrailingslash-option-1",level:4},{value:"Promise-based acknowledgements",id:"promise-based-acknowledgements-1",level:4},{value:"Connection state recovery",id:"connection-state-recovery-1",level:4},{value:"Retry mechanism",id:"retry-mechanism",level:4},{value:"Dependencies",id:"dependencies-1",level:3}],d={toc:c},p="wrapper";function m(e){let{components:t,...n}=e;return(0,i.yg)(p,(0,a.A)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.yg)("p",null,(0,i.yg)("em",{parentName:"p"},"February 7, 2023")),(0,i.yg)("h2",{id:"server"},"Server"),(0,i.yg)("h3",{id:"bug-fixes"},"Bug Fixes"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"add timeout method to remote socket (",(0,i.yg)("a",{parentName:"li",href:"https://github.com/socketio/socket.io/issues/4558"},"#4558"),") (",(0,i.yg)("a",{parentName:"li",href:"https://github.com/socketio/socket.io/commit/0c0eb0016317218c2be3641e706cfaa9bea39a2d"},"0c0eb00"),")"),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"typings:")," properly type emits with timeout (",(0,i.yg)("a",{parentName:"li",href:"https://github.com/socketio/socket.io/commit/f3ada7d8ccc02eeced2b9b9ac8e4bc921eb630d2"},"f3ada7d"),")")),(0,i.yg)("h3",{id:"features"},"Features"),(0,i.yg)("h4",{id:"promise-based-acknowledgements"},"Promise-based acknowledgements"),(0,i.yg)("p",null,"This commit adds some syntactic sugar around acknowledgements:"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"emitWithAck()"))),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-js"},'try {\n  const responses = await io.timeout(1000).emitWithAck("some-event");\n  console.log(responses); // one response per client\n} catch (e) {\n  // some clients did not acknowledge the event in the given delay\n}\n\nio.on("connection", async (socket) => {\n    // without timeout\n  const response = await socket.emitWithAck("hello", "world");\n\n  // with a specific timeout\n  try {\n    const response = await socket.timeout(1000).emitWithAck("hello", "world");\n  } catch (err) {\n    // the client did not acknowledge the event in the given delay\n  }\n});\n')),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"serverSideEmitWithAck()"))),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-js"},'try {\n  const responses = await io.timeout(1000).serverSideEmitWithAck("some-event");\n  console.log(responses); // one response per server (except itself)\n} catch (e) {\n  // some servers did not acknowledge the event in the given delay\n}\n')),(0,i.yg)("p",null,"Added in ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/socketio/socket.io/commit/184f3cf7af57acc4b0948eee307f25f8536eb6c8"},"184f3cf"),"."),(0,i.yg)("h4",{id:"connection-state-recovery"},"Connection state recovery"),(0,i.yg)("p",null,"This feature allows a client to reconnect after a temporary disconnection and restore its state:"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"id"),(0,i.yg)("li",{parentName:"ul"},"rooms"),(0,i.yg)("li",{parentName:"ul"},"data"),(0,i.yg)("li",{parentName:"ul"},"missed packets")),(0,i.yg)("p",null,"Usage:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-js"},'import { Server } from "socket.io";\n\nconst io = new Server({\n  connectionStateRecovery: {\n    // default values\n    maxDisconnectionDuration: 2 * 60 * 1000,\n    skipMiddlewares: true,\n  },\n});\n\nio.on("connection", (socket) => {\n  console.log(socket.recovered); // whether the state was recovered or not\n});\n')),(0,i.yg)("p",null,"Here's how it works:"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"the server sends a session ID during the handshake (which is different from the current ",(0,i.yg)("inlineCode",{parentName:"li"},"id")," attribute, which is public and can be freely shared)"),(0,i.yg)("li",{parentName:"ul"},"the server also includes an offset in each packet (added at the end of the data array, for backward compatibility)"),(0,i.yg)("li",{parentName:"ul"},"upon temporary disconnection, the server stores the client state for a given delay (implemented at the adapter level)"),(0,i.yg)("li",{parentName:"ul"},"upon reconnection, the client sends both the session ID and the last offset it has processed, and the server tries to restore the state")),(0,i.yg)("p",null,"The in-memory adapter already supports this feature, and we will soon update the Postgres and MongoDB adapters. We will also create a new adapter based on ",(0,i.yg)("a",{parentName:"p",href:"https://redis.io/docs/data-types/streams/"},"Redis Streams"),", which will support this feature."),(0,i.yg)("p",null,"Added in ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/socketio/socket.io/commit/54d5ee05a684371191e207b8089f09fc24eb5107"},"54d5ee0"),"."),(0,i.yg)("h4",{id:"compatibility-for-real-with-express-middlewares"},"Compatibility (for real) with Express middlewares"),(0,i.yg)("p",null,"This feature implements middlewares at the Engine.IO level, because Socket.IO middlewares are meant for namespace authorization and are not executed during a classic HTTP request/response cycle."),(0,i.yg)("p",null,"Syntax:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-js"},'io.engine.use((req, res, next) => {\n  // do something\n\n  next();\n});\n\n// with express-session\nimport session from "express-session";\n\nio.engine.use(session({\n  secret: "keyboard cat",\n  resave: false,\n  saveUninitialized: true,\n  cookie: { secure: true }\n}));\n\n// with helmet\nimport helmet from "helmet";\n\nio.engine.use(helmet());\n')),(0,i.yg)("p",null,'A workaround was possible by using the allowRequest option and the "headers" event, but this feels way cleaner and works with upgrade requests too.'),(0,i.yg)("p",null,"Added in ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/socketio/engine.io/commit/24786e77c5403b1c4b5a2bc84e2af06f9187f74a"},"24786e7"),"."),(0,i.yg)("h4",{id:"error-details-in-the-disconnecting-and-disconnect-events"},"Error details in the disconnecting and disconnect events"),(0,i.yg)("p",null,"The ",(0,i.yg)("inlineCode",{parentName:"p"},"disconnect")," event will now contain additional details about the disconnection reason."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-js"},'io.on("connection", (socket) => {\n  socket.on("disconnect", (reason, description) => {\n    console.log(description);\n  });\n});\n')),(0,i.yg)("p",null,"Added in ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/socketio/socket.io/commit/8aa94991cee5518567d6254eec04b23f81510257"},"8aa9499"),"."),(0,i.yg)("h4",{id:"automatic-removal-of-empty-child-namespaces"},"Automatic removal of empty child namespaces"),(0,i.yg)("p",null,'This commit adds a new option, "cleanupEmptyChildNamespaces". With this option enabled (disabled by default), when a socket disconnects from a dynamic namespace and if there are no other sockets connected to it then the namespace will be cleaned up and its adapter will be closed.'),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-js"},'import { createServer } from "node:http";\nimport { Server } from "socket.io";\n\nconst httpServer = createServer();\nconst io = new Server(httpServer, {\n  cleanupEmptyChildNamespaces: true\n});\n')),(0,i.yg)("p",null,"Added in ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/socketio/socket.io/commit/5d9220b69adf73e086c27bbb63a4976b348f7c4c"},"5d9220b"),"."),(0,i.yg)("h4",{id:"a-new-addtrailingslash-option"},'A new "addTrailingSlash" option'),(0,i.yg)("p",null,"The trailing slash which was added by default can now be disabled:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-js"},'import { createServer } from "node:http";\nimport { Server } from "socket.io";\n\nconst httpServer = createServer();\nconst io = new Server(httpServer, {\n  addTrailingSlash: false\n});\n')),(0,i.yg)("p",null,"In the example above, the clients can omit the trailing slash and use ",(0,i.yg)("inlineCode",{parentName:"p"},"/socket.io")," instead of ",(0,i.yg)("inlineCode",{parentName:"p"},"/socket.io/"),"."),(0,i.yg)("p",null,"Added in ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/socketio/engine.io/commit/d0fd4746afa396297f07bb62e539b0c1c4018d7c"},"d0fd474"),"."),(0,i.yg)("h3",{id:"performance-improvements"},"Performance Improvements"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"precompute the WebSocket frames when broadcasting (",(0,i.yg)("a",{parentName:"li",href:"https://github.com/socketio/socket.io/commit/da2b54279749adc5279c9ac4742b01b36c01cff0"},"da2b542"),")")),(0,i.yg)("h3",{id:"dependencies"},"Dependencies"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"https://github.com/socketio/engine.io/releases/tag/6.4.0"},(0,i.yg)("inlineCode",{parentName:"a"},"engine.io@~6.4.0"))," (",(0,i.yg)("a",{parentName:"li",href:"https://github.com/socketio/engine.io/compare/6.2.1...6.4.0"},"https://github.com/socketio/engine.io/compare/6.2.1...6.4.0"),")"),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"https://github.com/websockets/ws/releases/tag/8.11.0"},(0,i.yg)("inlineCode",{parentName:"a"},"ws@~8.11.0"))," (",(0,i.yg)("a",{parentName:"li",href:"https://github.com/websockets/ws/compare/8.2.3...8.11.0"},"https://github.com/websockets/ws/compare/8.2.3...8.11.0"),")")),(0,i.yg)("h2",{id:"client"},"Client"),(0,i.yg)("h3",{id:"bug-fixes-1"},"Bug Fixes"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"typings:")," do not expose browser-specific types (",(0,i.yg)("a",{parentName:"li",href:"https://github.com/socketio/socket.io-client/commit/4d6d95e0792efd43b78c760b055764fef02ebc9e"},"4d6d95e"),")"),(0,i.yg)("li",{parentName:"ul"},"ensure manager.socket() returns an active socket (",(0,i.yg)("a",{parentName:"li",href:"https://github.com/socketio/socket.io-client/commit/b7dd891e890461d33a104ca9187d5cd30d6f76af"},"b7dd891"),")"),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"typings:")," properly type emits with timeout (",(0,i.yg)("a",{parentName:"li",href:"https://github.com/socketio/socket.io-client/issues/1570"},"#1570"),") (",(0,i.yg)("a",{parentName:"li",href:"https://github.com/socketio/socket.io-client/commit/33e417258c9a5697e001163971ae87821e9c097f"},"33e4172"),")")),(0,i.yg)("h3",{id:"features-1"},"Features"),(0,i.yg)("h4",{id:"a-new-addtrailingslash-option-1"},'A new "addTrailingSlash" option'),(0,i.yg)("p",null,"The trailing slash which was added by default can now be disabled:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-js"},'import { io } from "socket.io-client";\n\nconst socket = io("https://example.com", {\n  addTrailingSlash: false\n});\n')),(0,i.yg)("p",null,"In the example above, the request URL will be ",(0,i.yg)("inlineCode",{parentName:"p"},"https://example.com/socket.io")," instead of ",(0,i.yg)("inlineCode",{parentName:"p"},"https://example.com/socket.io/"),"."),(0,i.yg)("p",null,"Added in ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/socketio/engine.io-client/commit/21a6e1219add92157c5442537d24fbe1129a50f5"},"21a6e12"),"."),(0,i.yg)("h4",{id:"promise-based-acknowledgements-1"},"Promise-based acknowledgements"),(0,i.yg)("p",null,"This commit adds some syntactic sugar around acknowledgements:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-js"},'// without timeout\nconst response = await socket.emitWithAck("hello", "world");\n\n// with a specific timeout\ntry {\n  const response = await socket.timeout(1000).emitWithAck("hello", "world");\n} catch (err) {\n  // the server did not acknowledge the event in the given delay\n}\n')),(0,i.yg)("p",null,"Note: environments that ",(0,i.yg)("a",{parentName:"p",href:"https://caniuse.com/promises"},"do not support Promises")," will need to add a polyfill in order to use this feature."),(0,i.yg)("p",null,"Added in ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/socketio/socket.io-client/commit/47b979d57388e9b5e9a332f3f4a9873211f0d844"},"47b979d"),"."),(0,i.yg)("h4",{id:"connection-state-recovery-1"},"Connection state recovery"),(0,i.yg)("p",null,"This feature allows a client to reconnect after a temporary disconnection and restore its ID and receive any packets that was missed during the disconnection gap. It must be enabled on the server side."),(0,i.yg)("p",null,"A new boolean attribute named ",(0,i.yg)("inlineCode",{parentName:"p"},"recovered")," is added on the ",(0,i.yg)("inlineCode",{parentName:"p"},"socket")," object:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-js"},'socket.on("connect", () => {\n  console.log(socket.recovered); // whether the recovery was successful\n});\n')),(0,i.yg)("p",null,"Added in ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/socketio/socket.io/commit/54d5ee05a684371191e207b8089f09fc24eb5107"},"54d5ee0")," (server) and ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/socketio/socket.io-client/commit/b4e20c5c709b5e9cc03ee9b6bd1d576f4810a817"},"b4e20c5")," (client)."),(0,i.yg)("h4",{id:"retry-mechanism"},"Retry mechanism"),(0,i.yg)("p",null,"Two new options are available:"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"retries"),": the maximum number of retries. Above the limit, the packet will be discarded."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"ackTimeout"),": the default timeout in milliseconds used when waiting for an acknowledgement (not to be mixed up with the already existing ",(0,i.yg)("inlineCode",{parentName:"li"},"timeout")," option, which is used by the Manager during the connection)")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-js"},'const socket = io({\n  retries: 3,\n  ackTimeout: 10000\n});\n\n// implicit ack\nsocket.emit("my-event");\n\n// explicit ack\nsocket.emit("my-event", (err, val) => { /* ... */ });\n\n// custom timeout (in that case the ackTimeout is optional)\nsocket.timeout(5000).emit("my-event", (err, val) => { /* ... */ });\n')),(0,i.yg)("p",null,'In all examples above, "my-event" will be sent up to 4 times (1 + 3), until the server sends an acknowledgement.'),(0,i.yg)("p",null,"Assigning a unique ID to each packet is the duty of the user, in order to allow deduplication on the server side."),(0,i.yg)("p",null,"Added in ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/socketio/socket.io-client/commit/655dce97556a1ea44a60db6b694d0cfd85b5f70f"},"655dce9"),"."),(0,i.yg)("h3",{id:"dependencies-1"},"Dependencies"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"https://github.com/socketio/engine.io-client/releases/tag/6.4.0"},(0,i.yg)("inlineCode",{parentName:"a"},"engine.io-client@~6.4.0"))," (",(0,i.yg)("a",{parentName:"li",href:"https://github.com/socketio/engine.io-client/compare/6.2.3...6.4.0"},"diff"),")"),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"https://github.com/websockets/ws/releases/tag/8.11.0"},(0,i.yg)("inlineCode",{parentName:"a"},"ws@~8.11.0"))," (",(0,i.yg)("a",{parentName:"li",href:"https://github.com/websockets/ws/compare/8.2.3...8.11.0"},"diff"),")")))}m.isMDXComponent=!0}}]);