"use strict";(self.webpackChunksample_website=self.webpackChunksample_website||[]).push([[9526],{5680:(e,t,r)=>{r.d(t,{xA:()=>c,yg:()=>d});var a=r(6540);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var i=a.createContext({}),p=function(e){var t=a.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},c=function(e){var t=p(e.components);return a.createElement(i.Provider,{value:t},e.children)},u="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(r),m=n,d=u["".concat(i,".").concat(m)]||u[m]||g[m]||o;return r?a.createElement(d,l(l({ref:t},c),{},{components:r})):a.createElement(d,l({ref:t},c))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,l=new Array(o);l[0]=m;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[u]="string"==typeof e?e:n,l[1]=s;for(var p=2;p<o;p++)l[p]=r[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},9411:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>g,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var a=r(8168),n=(r(6540),r(5680));const o={title:"Glossary",sidebar_position:2,slug:"/glossary/"},l=void 0,s={unversionedId:"categories/Miscellaneous/glossary",id:"version-3.x/categories/Miscellaneous/glossary",title:"Glossary",description:"We will list here the terms that are related to the Socket.IO ecosystem:",source:"@site/versioned_docs/version-3.x/categories/07-Miscellaneous/glossary.md",sourceDirName:"categories/07-Miscellaneous",slug:"/glossary/",permalink:"/docs/v3/glossary/",draft:!1,editUrl:"https://github.com/socketio/nhonvo.github.io/edit/main/versioned_docs/version-3.x/categories/07-Miscellaneous/glossary.md",tags:[],version:"3.x",lastUpdatedAt:1631600541,formattedLastUpdatedAt:"Sep 14, 2021",sidebarPosition:2,frontMatter:{title:"Glossary",sidebar_position:2,slug:"/glossary/"},sidebar:"version-3.x/sidebar",previous:{title:"FAQ",permalink:"/docs/v3/faq/"}},i={},p=[{value:"Adapter",id:"adapter",level:2},{value:"Engine.IO",id:"engineio",level:2},{value:"Namespace",id:"namespace",level:2},{value:"Room",id:"room",level:2},{value:"Transport",id:"transport",level:2}],c={toc:p},u="wrapper";function g(e){let{components:t,...r}=e;return(0,n.yg)(u,(0,a.A)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,n.yg)("p",null,"We will list here the terms that are related to the Socket.IO ecosystem:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"#Adapter"},"Adapter")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"#Engine-IO"},"Engine.IO")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"#Namespace"},"Namespace")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"#Room"},"Room")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"#Transport"},"Transport"))),(0,n.yg)("h2",{id:"adapter"},"Adapter"),(0,n.yg)("p",null,"An Adapter is a server-side component which is responsible for:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"storing the relationships between the Socket instances and the ",(0,n.yg)("a",{parentName:"li",href:"/docs/v3/rooms/"},"rooms")),(0,n.yg)("li",{parentName:"ul"},"broadcasting events to ",(0,n.yg)("a",{parentName:"li",href:"/docs/v3/broadcasting-events/"},"all")," (or a subset of) clients")),(0,n.yg)("p",null,"There are currently two official adapters:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"the ",(0,n.yg)("a",{parentName:"li",href:"https://github.com/socketio/socket.io-adapter/"},"in-memory adapter"),", which is included by default with the Socket.IO server"),(0,n.yg)("li",{parentName:"ul"},"the ",(0,n.yg)("a",{parentName:"li",href:"https://github.com/socketio/socket.io-redis-adapter"},"Redis adapter"),", which is useful when scaling horizontally (see ",(0,n.yg)("a",{parentName:"li",href:"/docs/v4/using-multiple-nodes/"},"here"),")"),(0,n.yg)("li",{parentName:"ul"},"the ",(0,n.yg)("a",{parentName:"li",href:"https://github.com/socketio/socket.io-mongo-adapter"},"MongoDB adapter"))),(0,n.yg)("p",null,"The in-memory adapter can be extended to add support for other messaging systems, like RabbitMQ or Google Pub/Sub for example."),(0,n.yg)("p",null,"Please see the documentation ",(0,n.yg)("a",{parentName:"p",href:"/docs/v3/rooms/#Implementation-details/"},"here"),"."),(0,n.yg)("h2",{id:"engineio"},"Engine.IO"),(0,n.yg)("p",null,"Engine.IO is an internal component of Socket.IO, which is responsible for establishing the low-level connection between the server and the client."),(0,n.yg)("p",null,"You will find more information ",(0,n.yg)("a",{parentName:"p",href:"/docs/v4/how-it-works/"},"here"),"."),(0,n.yg)("h2",{id:"namespace"},"Namespace"),(0,n.yg)("p",null,"A Namespace is a concept that allows splitting the application logic on the server-side."),(0,n.yg)("p",null,"Please see the documentation ",(0,n.yg)("a",{parentName:"p",href:"/docs/v3/namespaces/"},"here"),"."),(0,n.yg)("h2",{id:"room"},"Room"),(0,n.yg)("p",null,"A Room is a server-side concept that allows broadcasting data to a subset of clients."),(0,n.yg)("p",null,"Please see the documentation ",(0,n.yg)("a",{parentName:"p",href:"/docs/v3/rooms/"},"here"),"."),(0,n.yg)("h2",{id:"transport"},"Transport"),(0,n.yg)("p",null,"A Transport represents the low-level way of establishing a connection between the server and the client."),(0,n.yg)("p",null,"There are currently two implemented transports:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"HTTP long-polling"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API"},"WebSocket"))),(0,n.yg)("p",null,"Please see the documentation ",(0,n.yg)("a",{parentName:"p",href:"/docs/v3/how-it-works/#Transports"},"here"),"."))}g.isMDXComponent=!0}}]);