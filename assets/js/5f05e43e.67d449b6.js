"use strict";(self.webpackChunksample_website=self.webpackChunksample_website||[]).push([[6412],{5680:(e,r,t)=>{t.d(r,{xA:()=>p,yg:()=>g});var n=t(6540);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function d(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var i=n.createContext({}),l=function(e){var r=n.useContext(i),t=r;return e&&(t="function"==typeof e?e(r):d(d({},r),e)),t},p=function(e){var r=l(e.components);return n.createElement(i.Provider,{value:r},e.children)},c="mdxType",h={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},y=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),c=l(t),y=a,g=c["".concat(i,".").concat(y)]||c[y]||h[y]||o;return t?n.createElement(g,d(d({ref:r},p),{},{components:t})):n.createElement(g,d({ref:r},p))}));function g(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,d=new Array(o);d[0]=y;var s={};for(var i in r)hasOwnProperty.call(r,i)&&(s[i]=r[i]);s.originalType=e,s[c]="string"==typeof e?e:a,d[1]=s;for(var l=2;l<o;l++)d[l]=t[l];return n.createElement.apply(null,d)}return n.createElement.apply(null,t)}y.displayName="MDXCreateElement"},5066:(e,r,t)=>{t.r(r),t.d(r,{contentTitle:()=>d,default:()=>c,frontMatter:()=>o,metadata:()=>s,toc:()=>i});var n=t(8168),a=(t(6540),t(5680));const o={title:"How to get the IP address of the client"},d="How to get the IP address of the client",s={type:"mdx",permalink:"/how-to/get-the-ip-address-of-the-client",source:"@site/src/pages/how-to/get-the-ip-address-of-the-client.md",title:"How to get the IP address of the client",description:"Direct connection",frontMatter:{title:"How to get the IP address of the client"}},i=[{value:"Direct connection",id:"direct-connection",level:2},{value:"Behind a proxy",id:"behind-a-proxy",level:2},{value:"<code>X-Forwarded-For</code> header",id:"x-forwarded-for-header",level:3},{value:"<code>Forwarded</code> header",id:"forwarded-header",level:3},{value:"CloudFlare",id:"cloudflare",level:3},{value:"Fastly",id:"fastly",level:3}],l={toc:i},p="wrapper";function c(e){let{components:r,...t}=e;return(0,a.yg)(p,(0,n.A)({},l,t,{components:r,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"how-to-get-the-ip-address-of-the-client"},"How to get the IP address of the client"),(0,a.yg)("h2",{id:"direct-connection"},"Direct connection"),(0,a.yg)("p",null,"The IP address of the client can be found in the ",(0,a.yg)("a",{parentName:"p",href:"/docs/v4/server-api/#sockethandshake"},(0,a.yg)("inlineCode",{parentName:"a"},"handshake"))," object:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},'io.on("connection", (socket) => {\n  const ipAddress = socket.handshake.address;\n\n  console.log(ipAddress); // prints something like "203.0.113.195" (IPv4) or "2001:db8:85a3:8d3:1319:8a2e:370:7348" (IPv6)\n});\n')),(0,a.yg)("h2",{id:"behind-a-proxy"},"Behind a proxy"),(0,a.yg)("p",null,"If you are behind a proxy like ",(0,a.yg)("a",{parentName:"p",href:"https://nginx.org/en/"},"nginx"),", the ",(0,a.yg)("inlineCode",{parentName:"p"},"address")," attribute will be the IP address of the proxy."),(0,a.yg)("p",null,"In that case, the IP address of the client will be found in the request headers."),(0,a.yg)("h3",{id:"x-forwarded-for-header"},(0,a.yg)("inlineCode",{parentName:"h3"},"X-Forwarded-For")," header"),(0,a.yg)("p",null,"The ",(0,a.yg)("inlineCode",{parentName:"p"},"X-Forwarded-For")," request header was a de-facto standard header for identifying the originating IP address of a client connecting to a web server through a proxy server."),(0,a.yg)("p",null,"Reference: ",(0,a.yg)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-For"},"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-For")),(0,a.yg)("p",null,"Format:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},"X-Forwarded-For: <client>, <proxy1>, <proxy2>\n")),(0,a.yg)("p",null,"Here's how you can retrieve the IP address of the client:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},'io.on("connection", (socket) => {\n  const ipAddress = socket.handshake.headers["x-forwarded-for"].split(",")[0];\n\n  console.log(ipAddress);\n});\n')),(0,a.yg)("admonition",{type:"note"},(0,a.yg)("p",{parentName:"admonition"},"The ",(0,a.yg)("inlineCode",{parentName:"p"},"X-Forwarded-For")," header is now deprecated (although still widely used) in favor of the standard ",(0,a.yg)("a",{parentName:"p",href:"#forwarded-header"},(0,a.yg)("inlineCode",{parentName:"a"},"Forwarded"))," header.")),(0,a.yg)("h3",{id:"forwarded-header"},(0,a.yg)("inlineCode",{parentName:"h3"},"Forwarded")," header"),(0,a.yg)("p",null,"The ",(0,a.yg)("inlineCode",{parentName:"p"},"Forwarded")," request header is the standard header for identifying the originating IP address of a client connecting to a web server through a proxy server."),(0,a.yg)("p",null,"Reference: ",(0,a.yg)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Forwarded"},"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Forwarded")),(0,a.yg)("p",null,"Format:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},"Forwarded: by=<identifier>;for=<identifier>;host=<host>;proto=<http|https>\n")),(0,a.yg)("p",null,"Here's how you can retrieve the IP address of the client:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},'function parseHeader(header) {\n  for (const directive of header.split(",")[0].split(";")) {\n    if (directive.startsWith("for=")) {\n      return directive.substring(4);\n    }\n  }\n}\n\nio.on("connection", (socket) => {\n  const ipAddress = parseHeader(socket.handshake.headers["forwarded"] || "");\n\n  console.log(ipAddress);\n});\n')),(0,a.yg)("admonition",{type:"note"},(0,a.yg)("p",{parentName:"admonition"},"This ",(0,a.yg)("inlineCode",{parentName:"p"},"parseHeader()")," method does not cover every edge case allowed by the specification. If you need a more robust method, please check the ",(0,a.yg)("a",{parentName:"p",href:"https://www.npmjs.com/package/forwarded-parse"},(0,a.yg)("inlineCode",{parentName:"a"},"forwarded-parse"))," package.")),(0,a.yg)("h3",{id:"cloudflare"},"CloudFlare"),(0,a.yg)("p",null,"CloudFlare uses a specific header: ",(0,a.yg)("inlineCode",{parentName:"p"},"cf-connecting-ip")),(0,a.yg)("p",null,"Reference: ",(0,a.yg)("a",{parentName:"p",href:"https://developers.cloudflare.com/fundamentals/reference/http-request-headers/"},"https://developers.cloudflare.com/fundamentals/reference/http-request-headers/")),(0,a.yg)("p",null,"Here's how you can retrieve the IP address of the client:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},'io.on("connection", (socket) => {\n  const ipAddress = socket.handshake.headers["cf-connecting-ip"];\n\n  console.log(ipAddress);\n});\n')),(0,a.yg)("h3",{id:"fastly"},"Fastly"),(0,a.yg)("p",null,"Fastly uses a specific header: ",(0,a.yg)("inlineCode",{parentName:"p"},"fastly-client-ip")),(0,a.yg)("p",null,"Reference: ",(0,a.yg)("a",{parentName:"p",href:"https://developer.fastly.com/reference/http/http-headers/Fastly-Client-IP/"},"https://developer.fastly.com/reference/http/http-headers/Fastly-Client-IP/")),(0,a.yg)("p",null,"Here's how you can retrieve the IP address of the client:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},'io.on("connection", (socket) => {\n  const ipAddress = socket.handshake.headers["fastly-client-ip"];\n\n  console.log(ipAddress);\n});\n')))}c.isMDXComponent=!0}}]);