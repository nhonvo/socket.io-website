"use strict";(self.webpackChunksample_website=self.webpackChunksample_website||[]).push([[7842],{5680:(e,n,t)=>{t.d(n,{xA:()=>m,yg:()=>u});var i=t(6540);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,i,o=function(e,n){if(null==e)return{};var t,i,o={},a=Object.keys(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=i.createContext({}),c=function(e){var n=i.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},m=function(e){var n=c(e.components);return i.createElement(l.Provider,{value:n},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},g=i.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),p=c(t),g=o,u=p["".concat(l,".").concat(g)]||p[g]||d[g]||a;return t?i.createElement(u,r(r({ref:n},m),{},{components:t})):i.createElement(u,r({ref:n},m))}));function u(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,r=new Array(a);r[0]=g;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[p]="string"==typeof e?e:o,r[1]=s;for(var c=2;c<a;c++)r[c]=t[c];return i.createElement.apply(null,r)}return i.createElement.apply(null,t)}g.displayName="MDXCreateElement"},3344:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var i=t(8168),o=(t(6540),t(5680));const a={title:"Emit cheatsheet",sidebar_position:2,slug:"/emit-cheatsheet/"},r=void 0,s={unversionedId:"categories/Documentation/emit-cheatsheet",id:"version-2.x/categories/Documentation/emit-cheatsheet",title:"Emit cheatsheet",description:"Note",source:"@site/versioned_docs/version-2.x/categories/01-Documentation/emit-cheatsheet.md",sourceDirName:"categories/01-Documentation",slug:"/emit-cheatsheet/",permalink:"/socket.io-website/docs/v2/emit-cheatsheet/",draft:!1,editUrl:"https://github.com/socketio/socket.io-website/edit/main/versioned_docs/version-2.x/categories/01-Documentation/emit-cheatsheet.md",tags:[],version:"2.x",lastUpdatedAt:1631600541,formattedLastUpdatedAt:"Sep 14, 2021",sidebarPosition:2,frontMatter:{title:"Emit cheatsheet",sidebar_position:2,slug:"/emit-cheatsheet/"},sidebar:"version-2.x/sidebar",previous:{title:"Introduction",permalink:"/socket.io-website/docs/v2/"},next:{title:"Logging and debugging",permalink:"/socket.io-website/docs/v2/logging-and-debugging/"}},l={},c=[],m={toc:c},p="wrapper";function d(e){let{components:n,...t}=e;return(0,o.yg)(p,(0,i.A)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},"\nio.on('connection', onConnect);\n\nfunction onConnect(socket){\n\n  // sending to the client\n  socket.emit('hello', 'can you hear me?', 1, 2, 'abc');\n\n  // sending to all clients except sender\n  socket.broadcast.emit('broadcast', 'hello friends!');\n\n  // sending to all clients in 'game' room except sender\n  socket.to('game').emit('nice game', \"let's play a game\");\n\n  // sending to all clients in 'game1' and/or in 'game2' room, except sender\n  socket.to('game1').to('game2').emit('nice game', \"let's play a game (too)\");\n\n  // sending to all clients in 'game' room, including sender\n  io.in('game').emit('big-announcement', 'the game will start soon');\n\n  // sending to all clients in namespace 'myNamespace', including sender\n  io.of('myNamespace').emit('bigger-announcement', 'the tournament will start soon');\n\n  // sending to a specific room in a specific namespace, including sender\n  io.of('myNamespace').to('room').emit('event', 'message');\n\n  // sending to individual socketid (private message)\n  io.to(socketId).emit('hey', 'I just met you');\n\n  // WARNING: `socket.to(socket.id).emit()` will NOT work, as it will send to everyone in the room\n  // named `socket.id` but the sender. Please use the classic `socket.emit()` instead.\n\n  // sending with acknowledgement\n  socket.emit('question', 'do you think so?', function (answer) {});\n\n  // sending without compression\n  socket.compress(false).emit('uncompressed', \"that's rough\");\n\n  // sending a message that might be dropped if the client is not ready to receive messages\n  socket.volatile.emit('maybe', 'do you really need it?');\n\n  // specifying whether the data to send has binary data\n  socket.binary(false).emit('what', 'I have no binaries!');\n\n  // sending to all clients on this node (when using multiple nodes)\n  io.local.emit('hi', 'my lovely babies');\n\n  // sending to all connected clients\n  io.emit('an event sent to all connected clients');\n\n};\n\n")),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Note:")," The following events are reserved and should not be used as event names by your application:"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"connect")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"connection")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"connect_error")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"connect_timeout")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"error")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"disconnect")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"disconnecting")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"newListener")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"reconnect_attempt")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"reconnecting")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"reconnect_error")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"reconnect_failed")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"removeListener")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"ping")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"pong"))))}d.isMDXComponent=!0}}]);