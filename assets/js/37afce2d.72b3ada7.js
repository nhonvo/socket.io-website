"use strict";(self.webpackChunksample_website=self.webpackChunksample_website||[]).push([[146],{5680:(e,t,n)=>{n.d(t,{xA:()=>p,yg:()=>v});var r=n(6540);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),m=c(n),g=a,v=m["".concat(l,".").concat(g)]||m[g]||d[g]||s;return n?r.createElement(v,o(o({ref:t},p),{},{components:n})):r.createElement(v,o({ref:t},p))}));function v(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,o=new Array(s);o[0]=g;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[m]="string"==typeof e?e:a,o[1]=i;for(var c=2;c<s;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},3550:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>s,metadata:()=>i,toc:()=>c});var r=n(8168),a=(n(6540),n(5680));const s={title:"Listening to events",sidebar_position:2,slug:"/listening-to-events/"},o=void 0,i={unversionedId:"categories/Events/listening-to-events",id:"version-3.x/categories/Events/listening-to-events",title:"Listening to events",description:"There are several ways to handle events that are transmitted between the server and the client.",source:"@site/versioned_docs/version-3.x/categories/04-Events/listening-to-events.md",sourceDirName:"categories/04-Events",slug:"/listening-to-events/",permalink:"/socket.io-website/docs/v3/listening-to-events/",draft:!1,editUrl:"https://github.com/socketio/socket.io-website/edit/main/versioned_docs/version-3.x/categories/04-Events/listening-to-events.md",tags:[],version:"3.x",lastUpdatedAt:1631600541,formattedLastUpdatedAt:"Sep 14, 2021",sidebarPosition:2,frontMatter:{title:"Listening to events",sidebar_position:2,slug:"/listening-to-events/"},sidebar:"version-3.x/sidebar",previous:{title:"Emitting events",permalink:"/socket.io-website/docs/v3/emitting-events/"},next:{title:"Broadcasting events",permalink:"/socket.io-website/docs/v3/broadcasting-events/"}},l={},c=[{value:"EventEmitter methods",id:"eventemitter-methods",level:2},{value:"socket.on(eventName, listener)",id:"socketoneventname-listener",level:3},{value:"socket.once(eventName, listener)",id:"socketonceeventname-listener",level:3},{value:"socket.off(eventName, listener)",id:"socketoffeventname-listener",level:3},{value:"socket.removeAllListeners(eventName)",id:"socketremovealllistenerseventname",level:3},{value:"Catch-all listeners",id:"catch-all-listeners",level:2},{value:"socket.onAny(listener)",id:"socketonanylistener",level:3},{value:"socket.prependAny(listener)",id:"socketprependanylistener",level:3},{value:"socket.offAny(listener)",id:"socketoffanylistener",level:3},{value:"Validation",id:"validation",level:2},{value:"Error handling",id:"error-handling",level:2}],p={toc:c},m="wrapper";function d(e){let{components:t,...n}=e;return(0,a.yg)(m,(0,r.A)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("p",null,"There are several ways to handle events that are transmitted between the server and the client."),(0,a.yg)("h2",{id:"eventemitter-methods"},"EventEmitter methods"),(0,a.yg)("p",null,"On the server-side, the Socket instance extends the Node.js ",(0,a.yg)("a",{parentName:"p",href:"https://nodejs.org/docs/latest/api/events.html#events_events"},"EventEmitter")," class."),(0,a.yg)("p",null,"On the client-side, the Socket instance uses the event emitter provided by the ",(0,a.yg)("a",{parentName:"p",href:"https://github.com/component/emitter"},"component-emitter")," library, which exposes a subset of the EventEmitter methods."),(0,a.yg)("h3",{id:"socketoneventname-listener"},"socket.on(eventName, listener)"),(0,a.yg)("p",null,"Adds the ",(0,a.yg)("em",{parentName:"p"},"listener")," function to the end of the listeners array for the event named ",(0,a.yg)("em",{parentName:"p"},"eventName"),"."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},'socket.on("details", (...args) => {\n  // ...\n});\n')),(0,a.yg)("h3",{id:"socketonceeventname-listener"},"socket.once(eventName, listener)"),(0,a.yg)("p",null,"Adds a ",(0,a.yg)("strong",{parentName:"p"},"one-time")," ",(0,a.yg)("em",{parentName:"p"},"listener")," function for the event named ",(0,a.yg)("em",{parentName:"p"},"eventName")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},'socket.once("details", (...args) => {\n  // ...\n});\n')),(0,a.yg)("h3",{id:"socketoffeventname-listener"},"socket.off(eventName, listener)"),(0,a.yg)("p",null,"Removes the specified ",(0,a.yg)("em",{parentName:"p"},"listener")," from the listener array for the event named ",(0,a.yg)("em",{parentName:"p"},"eventName"),"."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},'const listener = (...args) => {\n  console.log(args);\n}\n\nsocket.on("details", listener);\n\n// and then later...\nsocket.off("details", listener);\n')),(0,a.yg)("h3",{id:"socketremovealllistenerseventname"},"socket.removeAllListeners(","[eventName]",")"),(0,a.yg)("p",null,"Removes all listeners, or those of the specified ",(0,a.yg)("em",{parentName:"p"},"eventName"),"."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},'// for a specific event\nsocket.removeAllListeners("details");\n// for all events\nsocket.removeAllListeners();\n')),(0,a.yg)("h2",{id:"catch-all-listeners"},"Catch-all listeners"),(0,a.yg)("p",null,"Since Socket.IO v3, a new API inspired from the ",(0,a.yg)("a",{parentName:"p",href:"https://github.com/EventEmitter2/EventEmitter2"},"EventEmitter2")," library allows to declare catch-all listeners."),(0,a.yg)("p",null,"This feature is available on both the client and the server."),(0,a.yg)("h3",{id:"socketonanylistener"},"socket.onAny(listener)"),(0,a.yg)("p",null,"Adds a listener that will be fired when any event is emitted."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},"socket.onAny((eventName, ...args) => {\n  // ...\n});\n")),(0,a.yg)("h3",{id:"socketprependanylistener"},"socket.prependAny(listener)"),(0,a.yg)("p",null,"Adds a listener that will be fired when any event is emitted. The listener is added to the beginning of the listeners array."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},"socket.prependAny((eventName, ...args) => {\n  // ...\n});\n")),(0,a.yg)("h3",{id:"socketoffanylistener"},"socket.offAny(","[listener]",")"),(0,a.yg)("p",null,"Removes all catch-all listeners, or the given listener."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},"const listener = (eventName, ...args) => {\n  console.log(eventName, args);\n}\n\nsocket.onAny(listener);\n\n// and then later...\nsocket.offAny(listener);\n\n// or all listeners\nsocket.offAny();\n")),(0,a.yg)("h2",{id:"validation"},"Validation"),(0,a.yg)("p",null,"The validation of the event arguments is out of the scope of the Socket.IO library."),(0,a.yg)("p",null,"There are many packages in the JS ecosystem which cover this use case, among them:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://www.npmjs.com/package/joi"},"joi")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://www.npmjs.com/package/ajv"},"ajv")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://www.npmjs.com/package/validatorjs"},"validatorjs"))),(0,a.yg)("p",null,"Example with ",(0,a.yg)("a",{parentName:"p",href:"https://joi.dev/api/"},"joi")," and ",(0,a.yg)("a",{parentName:"p",href:"/docs/v3/emitting-events/#Acknowledgements"},"acknowledgements"),":"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},'const Joi = require("joi");\n\nconst userSchema = Joi.object({\n  username: Joi.string().max(30).required(),\n  email: Joi.string().email().required()\n});\n\nio.on("connection", (socket) => {\n  socket.on("create user", (payload, callback) => {\n    if (typeof callback !== "function") {\n      // not an acknowledgement\n      return socket.disconnect();\n    }\n    const { error, value } = userSchema.validate(payload);\n    if (error) {\n      return callback({\n        status: "KO",\n        error\n      });\n    }\n    // do something with the value, and then\n    callback({\n      status: "OK"\n    });\n  });\n\n});\n')),(0,a.yg)("h2",{id:"error-handling"},"Error handling"),(0,a.yg)("p",null,"There is currently no built-in error handling in the Socket.IO library, which means you must catch any error that could be thrown in a listener."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},'io.on("connection", (socket) => {\n  socket.on("list items", async (callback) => {\n    try {\n      const items = await findItems();\n      callback({\n        status: "OK",\n        items\n      });\n    } catch (e) {\n      callback({\n        status: "NOK"\n      });\n    }\n  });\n});\n')),(0,a.yg)("p",null,"On the server-side, using ",(0,a.yg)("inlineCode",{parentName:"p"},"EventEmitter.captureRejections = true")," (experimental, see ",(0,a.yg)("a",{parentName:"p",href:"https://nodejs.org/api/events.html#events_capture_rejections_of_promises"},"here"),") might be interesting too, depending on your use case."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},'require("events").captureRejections = true;\n\nio.on("connection", (socket) => {\n  socket.on("list products", async () => {\n    const products = await findProducts();\n    socket.emit("products", products);\n  });\n\n  socket[Symbol.for(\'nodejs.rejection\')] = (err) => {\n    socket.emit("error", err);\n  };\n});\n')))}d.isMDXComponent=!0}}]);