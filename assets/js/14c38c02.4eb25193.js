"use strict";(self.webpackChunksample_website=self.webpackChunksample_website||[]).push([[6491],{5680:(e,t,n)=>{n.d(t,{xA:()=>l,yg:()=>g});var r=n(6540);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},l=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,p=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),m=c(n),d=a,g=m["".concat(p,".").concat(d)]||m[d]||u[d]||s;return n?r.createElement(g,o(o({ref:t},l),{},{components:n})):r.createElement(g,o({ref:t},l))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,o=new Array(s);o[0]=d;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[m]="string"==typeof e?e:a,o[1]=i;for(var c=2;c<s;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7152:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>c});var r=n(8168),a=(n(6540),n(5680));const s={title:"Custom parser",sidebar_position:2,slug:"/custom-parser/"},o=void 0,i={unversionedId:"categories/Advanced/custom-parser",id:"version-3.x/categories/Advanced/custom-parser",title:"Custom parser",description:"Since Socket.IO v2.0.0, it is now possible to provide your own parser, in order to control the marshalling / unmarshalling of packets.",source:"@site/versioned_docs/version-3.x/categories/05-Advanced/custom-parser.md",sourceDirName:"categories/05-Advanced",slug:"/custom-parser/",permalink:"/socket.io-website/docs/v3/custom-parser/",draft:!1,editUrl:"https://github.com/socketio/socket.io-website/edit/main/versioned_docs/version-3.x/categories/05-Advanced/custom-parser.md",tags:[],version:"3.x",lastUpdatedAt:1632207871,formattedLastUpdatedAt:"Sep 21, 2021",sidebarPosition:2,frontMatter:{title:"Custom parser",sidebar_position:2,slug:"/custom-parser/"},sidebar:"version-3.x/sidebar",previous:{title:"Namespaces",permalink:"/socket.io-website/docs/v3/namespaces/"},next:{title:"Migrating from 2.x to 3.0",permalink:"/socket.io-website/docs/v3/migrating-from-2-x-to-3-0/"}},p={},c=[{value:"Implementing your own parser",id:"implementing-your-own-parser",level:2},{value:"The default parser",id:"the-default-parser",level:2},{value:"The msgpack parser",id:"the-msgpack-parser",level:2}],l={toc:c},m="wrapper";function u(e){let{components:t,...n}=e;return(0,a.yg)(m,(0,r.A)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("p",null,"Since Socket.IO v2.0.0, it is now possible to provide your own parser, in order to control the marshalling / unmarshalling of packets."),(0,a.yg)("p",null,(0,a.yg)("em",{parentName:"p"},"Server")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},'const httpServer = require("http").createServer();\nconst io = require("socket.io")(httpServer, {\n  parser: myParser\n});\n')),(0,a.yg)("p",null,(0,a.yg)("em",{parentName:"p"},"Client")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},"const socket = io({\n  parser: myParser\n});\n")),(0,a.yg)("h2",{id:"implementing-your-own-parser"},"Implementing your own parser"),(0,a.yg)("p",null,"Here is a basic example with a parser that uses the ",(0,a.yg)("inlineCode",{parentName:"p"},"JSON.stringify()")," and ",(0,a.yg)("inlineCode",{parentName:"p"},"JSON.parse()")," methods:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},'const Emitter = require("component-emitter"); // polyfill of Node.js EventEmitter in the browser \n\nclass Encoder {\n  /**\n   * Encode a packet into a list of strings/buffers\n   */\n  encode(packet) {\n    return [JSON.stringify(packet)];\n  }\n}\n\nclass Decoder extends Emitter {\n  /**\n   * Receive a chunk (string or buffer) and optionally emit a "decoded" event with the reconstructed packet\n   */\n  add(chunk) {\n    const packet = JSON.parse(chunk);\n    if (this.isPacketValid(packet)) {\n      this.emit("decoded", packet);\n    } else {\n      throw new Error("invalid format");\n    }\n  }\n  isPacketValid({ type, data, nsp, id }) {\n    const isNamespaceValid = typeof nsp === "string";\n    const isAckIdValid = id === undefined || Number.isInteger(id);\n    if (!isNamespaceValid || !isAckIdValid) {\n      return false;\n    }\n    switch (type) {\n      case 0: // CONNECT\n        return data === undefined || typeof data === "object";\n      case 1: // DISCONNECT\n        return data === undefined;\n      case 2: // EVENT\n        return Array.isArray(data) && data.length > 0;\n      case 3: // ACK\n        return Array.isArray(data);\n      case 4: // CONNECT_ERROR\n        return typeof data === "object";\n      default:\n        return false;\n    }\n  }\n  /**\n   * Clean up internal buffers\n   */\n  destroy() {}\n}\n\nmodule.exports = { Encoder, Decoder };\n')),(0,a.yg)("h2",{id:"the-default-parser"},"The default parser"),(0,a.yg)("p",null,"The source code of the default parser (the ",(0,a.yg)("inlineCode",{parentName:"p"},"socket.io-parser")," package) can be found here: ",(0,a.yg)("a",{parentName:"p",href:"https://github.com/socketio/socket.io-parser"},"https://github.com/socketio/socket.io-parser")),(0,a.yg)("p",null,"Example of output:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"basic emit")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},'socket.emit("test", 42);\n')),(0,a.yg)("p",null,"will be encoded as:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},'2["test",42]\n||\n|\u2514\u2500 JSON-encoded payload\n\u2514\u2500 packet type (2 => EVENT)\n')),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"emit with binary, acknowledgement and custom namespace")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},'socket.emit("test", Uint8Array.from([42]), () => {\n  console.log("ack received");\n});\n')),(0,a.yg)("p",null,"will be encoded as:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},'51-/admin,13["test",{"_placeholder":true,"num":0}]\n||||     || \u2514\u2500 JSON-encoded payload with placeholders for binary attachments\n||||     |\u2514\u2500 acknowledgement id\n||||     \u2514\u2500 separator\n|||\u2514\u2500 namespace (not included when it\'s the main namespace)\n||\u2514\u2500 separator\n|\u2514\u2500 number of binary attachments\n\u2514\u2500 packet type (5 => BINARY EVENT)\n\nand an additional attachment (the extracted Uint8Array)\n')),(0,a.yg)("p",null,"Pros:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"the binary attachments is then base64-encoded, so this parser is compatible with browsers that ",(0,a.yg)("a",{parentName:"li",href:"https://caniuse.com/mdn-javascript_builtins_arraybuffer"},"do not support Arraybuffers"),", like IE9")),(0,a.yg)("p",null,"Cons:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"packets with binary content are sent as two distinct WebSocket frames (if the WebSocket connection is established)")),(0,a.yg)("h2",{id:"the-msgpack-parser"},"The msgpack parser"),(0,a.yg)("p",null,"This parser uses the ",(0,a.yg)("a",{parentName:"p",href:"https://msgpack.org/"},"MessagePack")," serialization format."),(0,a.yg)("p",null,"The source code of this parser can be found here: ",(0,a.yg)("a",{parentName:"p",href:"https://github.com/socketio/socket.io-msgpack-parser"},"https://github.com/socketio/socket.io-msgpack-parser")),(0,a.yg)("p",null,"Sample usage:"),(0,a.yg)("p",null,(0,a.yg)("em",{parentName:"p"},"Server")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},'const httpServer = require("http").createServer();\nconst io = require("socket.io")(httpServer, {\n  parser: require("socket.io-msgpack-parser")\n});\n')),(0,a.yg)("p",null,(0,a.yg)("em",{parentName:"p"},"Client (Node.js)")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},'const socket = require("socket.io-client")("https://example.com", {\n  parser: require("socket.io-msgpack-parser")\n});\n')),(0,a.yg)("p",null,"In the browser, there is now an official bundle which includes this parser:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://cdn.socket.io/3.1.3/socket.io.msgpack.min.js"},"https://cdn.socket.io/3.1.3/socket.io.msgpack.min.js")),(0,a.yg)("li",{parentName:"ul"},"cdnjs: ",(0,a.yg)("a",{parentName:"li",href:"https://cdnjs.cloudflare.com/ajax/libs/socket.io/3.1.3/socket.io.msgpack.min.js"},"https://cdnjs.cloudflare.com/ajax/libs/socket.io/3.1.3/socket.io.msgpack.min.js")),(0,a.yg)("li",{parentName:"ul"},"jsDelivr: ",(0,a.yg)("a",{parentName:"li",href:"https://cdn.jsdelivr.net/npm/socket.io-client@3.1.3/dist/socket.io.msgpack.min.js"},"https://cdn.jsdelivr.net/npm/socket.io-client@3.1.3/dist/socket.io.msgpack.min.js")),(0,a.yg)("li",{parentName:"ul"},"unpkg: ",(0,a.yg)("a",{parentName:"li",href:"https://unpkg.com/socket.io-client@3.1.3/dist/socket.io.msgpack.min.js"},"https://unpkg.com/socket.io-client@3.1.3/dist/socket.io.msgpack.min.js"))),(0,a.yg)("p",null,"In that case, you don't need to specify the ",(0,a.yg)("inlineCode",{parentName:"p"},"parser")," option."),(0,a.yg)("p",null,"Pros:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"packets with binary content are sent as one single WebSocket frame (if the WebSocket connection is established)"),(0,a.yg)("li",{parentName:"ul"},"may results in smaller payloads (especially when using a lot of numbers)")),(0,a.yg)("p",null,"Cons:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"incompatible with browsers that ",(0,a.yg)("a",{parentName:"li",href:"https://caniuse.com/mdn-javascript_builtins_arraybuffer"},"do not support Arraybuffers"),", like IE9"),(0,a.yg)("li",{parentName:"ul"},"harder to debug in the Network tab of the browser")),(0,a.yg)("p",null,"Please note that ",(0,a.yg)("inlineCode",{parentName:"p"},"socket.io-msgpack-parser")," relies on the ",(0,a.yg)("a",{parentName:"p",href:"https://github.com/darrachequesne/notepack"},(0,a.yg)("inlineCode",{parentName:"a"},"notepack.io"))," MessagePack implementation. This implementation mainly focuses on performance and minimal bundle size, and thus does not support features like extension types. For a parser based on the ",(0,a.yg)("a",{parentName:"p",href:"https://github.com/msgpack/msgpack-javascript"},"official JavaScript implementation"),", please check ",(0,a.yg)("a",{parentName:"p",href:"https://www.npmjs.com/package/@skgdev/socket.io-msgpack-javascript"},"this package"),"."))}u.isMDXComponent=!0}}]);