"use strict";(self.webpackChunksample_website=self.webpackChunksample_website||[]).push([[4047],{5680:(e,n,t)=>{t.d(n,{xA:()=>p,yg:()=>g});var a=t(6540);function s(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){s(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,s=function(e,n){if(null==e)return{};var t,a,s={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(s[t]=e[t]);return s}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var l=a.createContext({}),c=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},p=function(e){var n=c(e.components);return a.createElement(l.Provider,{value:n},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,s=e.mdxType,o=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),m=c(t),d=s,g=m["".concat(l,".").concat(d)]||m[d]||u[d]||o;return t?a.createElement(g,r(r({ref:n},p),{},{components:t})):a.createElement(g,r({ref:n},p))}));function g(e,n){var t=arguments,s=n&&n.mdxType;if("string"==typeof e||s){var o=t.length,r=new Array(o);r[0]=d;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i[m]="string"==typeof e?e:s,r[1]=i;for(var c=2;c<o;c++)r[c]=t[c];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},1644:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var a=t(8168),s=(t(6540),t(5680));const o={title:"Namespaces",sidebar_position:4,slug:"/namespaces/"},r=void 0,i={unversionedId:"categories/Server/namespaces",id:"version-2.x/categories/Server/namespaces",title:"Namespaces",description:"A Namespace is a communication channel that allows you to split the logic of your application over a single shared connection.",source:"@site/versioned_docs/version-2.x/categories/02-Server/namespaces.md",sourceDirName:"categories/02-Server",slug:"/namespaces/",permalink:"/docs/v2/namespaces/",draft:!1,editUrl:"https://github.com/socketio/socket.io-website/edit/main/versioned_docs/version-2.x/categories/02-Server/namespaces.md",tags:[],version:"2.x",lastUpdatedAt:1631600541,formattedLastUpdatedAt:"Sep 14, 2021",sidebarPosition:4,frontMatter:{title:"Namespaces",sidebar_position:4,slug:"/namespaces/"},sidebar:"version-2.x/sidebar",previous:{title:"Rooms",permalink:"/docs/v2/rooms/"},next:{title:"Using multiple nodes",permalink:"/docs/v2/using-multiple-nodes/"}},l={},c=[{value:"Default namespace",id:"default-namespace",level:2},{value:"Custom namespaces",id:"custom-namespaces",level:2},{value:"Namespace middleware",id:"namespace-middleware",level:2},{value:"Handling middleware error",id:"handling-middleware-error",level:2},{value:"Compatibility with Express middleware",id:"compatibility-with-express-middleware",level:2}],p={toc:c},m="wrapper";function u(e){let{components:n,...o}=e;return(0,s.yg)(m,(0,a.A)({},p,o,{components:n,mdxType:"MDXLayout"}),(0,s.yg)("p",null,"A Namespace is a communication channel that allows you to split the logic of your application over a single shared connection."),(0,s.yg)("p",null,(0,s.yg)("img",{alt:"Namespace diagram",src:t(9596).A,width:"1321",height:"326"})),(0,s.yg)("p",null,"Possible use cases:"),(0,s.yg)("ul",null,(0,s.yg)("li",{parentName:"ul"},"you want to create an admin namespace that only authorized users have access to, so the logic related to those users is separated from the rest of the application")),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-js"},"const adminNamespace = io.of('/admin');\n\nadminNamespace.use((socket, next) => {\n  // ensure the user has sufficient rights\n  next();\n});\n\nadminNamespace.on('connection', socket => {\n  socket.on('delete user', () => {\n    // ...\n  });\n});\n")),(0,s.yg)("ul",null,(0,s.yg)("li",{parentName:"ul"},"your application has multiple tenants so you want to dynamically create one namespace per tenant")),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-js"},"const workspaces = io.of(/^\\/\\w+$/);\n\nworkspaces.on('connection', socket => {\n  const workspace = socket.nsp;\n\n  workspace.emit('hello');\n});\n\n// this middleware will be assigned to each namespace\nworkspaces.use((socket, next) => {\n  // ensure the user has access to the workspace\n  next();\n});\n")),(0,s.yg)("h2",{id:"default-namespace"},"Default namespace"),(0,s.yg)("p",null,"We call the default namespace ",(0,s.yg)("inlineCode",{parentName:"p"},"/")," and it\u2019s the one Socket.IO clients connect to by default, and the one the server listens to by default."),(0,s.yg)("p",null,"This namespace is identified by ",(0,s.yg)("inlineCode",{parentName:"p"},"io.sockets")," or simply ",(0,s.yg)("inlineCode",{parentName:"p"},"io"),":"),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-js"},"// the following two will emit to all the sockets connected to `/`\nio.sockets.emit('hi', 'everyone');\nio.emit('hi', 'everyone'); // short form\n")),(0,s.yg)("p",null,"Each namespace emits a ",(0,s.yg)("inlineCode",{parentName:"p"},"connection")," event that receives each ",(0,s.yg)("inlineCode",{parentName:"p"},"Socket")," instance as a parameter"),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-js"},"io.on('connection', socket => {\n  socket.on('disconnect', () => {});\n});\n")),(0,s.yg)("h2",{id:"custom-namespaces"},"Custom namespaces"),(0,s.yg)("p",null,"To set up a custom namespace, you can call the ",(0,s.yg)("inlineCode",{parentName:"p"},"of")," function on the server-side:"),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-js"},"const nsp = io.of('/my-namespace');\n\nnsp.on('connection', socket => {\n  console.log('someone connected');\n});\n\nnsp.emit('hi', 'everyone!');\n")),(0,s.yg)("p",null,"On the client side, you tell Socket.IO client to connect to that namespace:"),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-js"},"const socket = io('/my-namespace');\n")),(0,s.yg)("p",null,(0,s.yg)("strong",{parentName:"p"},"Important note:")," The namespace is an implementation detail of the Socket.IO protocol, and is not related to the actual URL of the underlying transport, which defaults to ",(0,s.yg)("inlineCode",{parentName:"p"},"/socket.io/\u2026"),"."),(0,s.yg)("h2",{id:"namespace-middleware"},"Namespace middleware"),(0,s.yg)("p",null,"A middleware is a function that gets executed for every incoming Socket, and receives as parameters the socket and a function to optionally defer execution to the next registered middleware. A Socket.IO middleware is very similar to what you can find in ",(0,s.yg)("a",{parentName:"p",href:"http://expressjs.com/en/guide/using-middleware.html"},"Express"),"."),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-js"},"// registers a middleware for the default namespace\nio.use((socket, next) => {\n  if (isValid(socket.request)) {\n    next();\n  } else {\n    next(new Error('invalid'));\n  }\n});\n\n// registers a middleware for a custom namespace\nio.of('/admin').use(async (socket, next) => {\n  const user = await fetchUser(socket.handshake.query);\n  if (user.isAdmin) {\n    socket.user = user;\n    next();\n  } else {\n    next(new Error('forbidden'));\n  }\n});\n")),(0,s.yg)("p",null,"You can register several middleware functions for the same namespace. They will be executed sequentially:"),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-js"},"io.use((socket, next) => {\n  next();\n});\n\nio.use((socket, next) => {\n  next(new Error('thou shall not pass'));\n});\n\nio.use((socket, next) => {\n  // not executed, since the previous middleware has returned an error\n  next();\n});\n")),(0,s.yg)("h2",{id:"handling-middleware-error"},"Handling middleware error"),(0,s.yg)("p",null,"If the ",(0,s.yg)("inlineCode",{parentName:"p"},"next")," method is called with an Error object, the client will receive an ",(0,s.yg)("inlineCode",{parentName:"p"},"error")," event."),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-js"},"import io from 'socket.io-client';\n\nconst socket = io();\n\nsocket.on('error', (reason) => {\n  console.log(reason); // prints the message associated with the error, e.g. \"thou shall not pass\" in the example above\n});\n")),(0,s.yg)("h2",{id:"compatibility-with-express-middleware"},"Compatibility with Express middleware"),(0,s.yg)("p",null,"Most existing ",(0,s.yg)("a",{parentName:"p",href:"http://expressjs.com/en/resources/middleware.html"},"Express middleware")," modules should be compatible with Socket.IO, you just need a little wrapper function to make the method signatures match:"),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-js"},"const wrap = middleware => (socket, next) => middleware(socket.request, {}, next);\n")),(0,s.yg)("p",null,"The middleware functions that end the request-response cycle and do not call ",(0,s.yg)("inlineCode",{parentName:"p"},"next()")," will not work though."),(0,s.yg)("p",null,"Example with ",(0,s.yg)("a",{parentName:"p",href:"https://www.npmjs.com/package/express-session"},"express-session"),":"),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-js"},"const session = require('express-session');\n\nio.use(wrap(session({ secret: 'cats' })));\n\nio.on('connection', (socket) => {\n  const session = socket.request.session;\n});\n")),(0,s.yg)("p",null,"Example with ",(0,s.yg)("a",{parentName:"p",href:"http://www.passportjs.org/"},"Passport"),":"),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-js"},"const session = require('express-session');\nconst passport = require('passport');\n\nio.use(wrap(session({ secret: 'cats' })));\nio.use(wrap(passport.initialize()));\nio.use(wrap(passport.session()));\n\nio.use((socket, next) => {\n  if (socket.request.user) {\n    next();\n  } else {\n    next(new Error('unauthorized'))\n  }\n});\n")),(0,s.yg)("p",null,"A complete example with Passport can be found ",(0,s.yg)("a",{parentName:"p",href:"https://github.com/socketio/socket.io/tree/master/examples/passport-example"},"here"),"."))}u.isMDXComponent=!0},9596:(e,n,t)=>{t.d(n,{A:()=>a});const a=t.p+"assets/images/namespaces-088745a8a8882118740f50b6b1232588.png"}}]);