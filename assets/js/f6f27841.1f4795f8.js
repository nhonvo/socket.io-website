"use strict";(self.webpackChunksample_website=self.webpackChunksample_website||[]).push([[9615],{5680:(e,n,t)=>{t.d(n,{xA:()=>g,yg:()=>y});var r=t(6540);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var i=r.createContext({}),c=function(e){var n=r.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},g=function(e){var n=c(e.components);return r.createElement(i.Provider,{value:n},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,s=e.originalType,i=e.parentName,g=l(e,["components","mdxType","originalType","parentName"]),p=c(t),d=a,y=p["".concat(i,".").concat(d)]||p[d]||m[d]||s;return t?r.createElement(y,o(o({ref:n},g),{},{components:t})):r.createElement(y,o({ref:n},g))}));function y(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var s=t.length,o=new Array(s);o[0]=d;var l={};for(var i in n)hasOwnProperty.call(n,i)&&(l[i]=n[i]);l.originalType=e,l[p]="string"==typeof e?e:a,o[1]=l;for(var c=2;c<s;c++)o[c]=t[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},8079:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>o,default:()=>m,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var r=t(8168),a=(t(6540),t(5680));const s={title:"Listening to events",sidebar_position:2,slug:"/listening-to-events/"},o=void 0,l={unversionedId:"categories/Events/listening-to-events",id:"categories/Events/listening-to-events",title:"Listening to events",description:"There are several ways to handle events that are transmitted between the server and the client.",source:"@site/docs/categories/04-Events/listening-to-events.md",sourceDirName:"categories/04-Events",slug:"/listening-to-events/",permalink:"/docs/v4/listening-to-events/",draft:!1,editUrl:"https://github.com/socketio/socket.io-website/edit/main/docs/categories/04-Events/listening-to-events.md",tags:[],version:"current",lastUpdatedAt:1679674023,formattedLastUpdatedAt:"Mar 24, 2023",sidebarPosition:2,frontMatter:{title:"Listening to events",sidebar_position:2,slug:"/listening-to-events/"},sidebar:"sidebar",previous:{title:"Emitting events",permalink:"/docs/v4/emitting-events/"},next:{title:"Broadcasting events",permalink:"/docs/v4/broadcasting-events/"}},i={},c=[{value:"EventEmitter methods",id:"eventemitter-methods",level:2},{value:"socket.on(eventName, listener)",id:"socketoneventname-listener",level:3},{value:"socket.once(eventName, listener)",id:"socketonceeventname-listener",level:3},{value:"socket.off(eventName, listener)",id:"socketoffeventname-listener",level:3},{value:"socket.removeAllListeners(eventName)",id:"socketremovealllistenerseventname",level:3},{value:"Catch-all listeners",id:"catch-all-listeners",level:2},{value:"socket.onAny(listener)",id:"socketonanylistener",level:3},{value:"socket.prependAny(listener)",id:"socketprependanylistener",level:3},{value:"socket.offAny(listener)",id:"socketoffanylistener",level:3},{value:"socket.onAnyOutgoing(listener)",id:"socketonanyoutgoinglistener",level:3},{value:"socket.prependAnyOutgoing(listener)",id:"socketprependanyoutgoinglistener",level:3},{value:"socket.offAnyOutgoing(listener)",id:"socketoffanyoutgoinglistener",level:3},{value:"Validation",id:"validation",level:2},{value:"Error handling",id:"error-handling",level:2}],g={toc:c},p="wrapper";function m(e){let{components:n,...t}=e;return(0,a.yg)(p,(0,r.A)({},g,t,{components:n,mdxType:"MDXLayout"}),(0,a.yg)("p",null,"There are several ways to handle events that are transmitted between the server and the client."),(0,a.yg)("h2",{id:"eventemitter-methods"},"EventEmitter methods"),(0,a.yg)("p",null,"On the server-side, the Socket instance extends the Node.js ",(0,a.yg)("a",{parentName:"p",href:"https://nodejs.org/docs/latest/api/events.html#events_events"},"EventEmitter")," class."),(0,a.yg)("p",null,"On the client-side, the Socket instance uses the event emitter provided by the ",(0,a.yg)("a",{parentName:"p",href:"https://github.com/component/emitter"},"component-emitter")," library, which exposes a subset of the EventEmitter methods."),(0,a.yg)("h3",{id:"socketoneventname-listener"},"socket.on(eventName, listener)"),(0,a.yg)("p",null,"Adds the ",(0,a.yg)("em",{parentName:"p"},"listener")," function to the end of the listeners array for the event named ",(0,a.yg)("em",{parentName:"p"},"eventName"),"."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},'socket.on("details", (...args) => {\n  // ...\n});\n')),(0,a.yg)("h3",{id:"socketonceeventname-listener"},"socket.once(eventName, listener)"),(0,a.yg)("p",null,"Adds a ",(0,a.yg)("strong",{parentName:"p"},"one-time")," ",(0,a.yg)("em",{parentName:"p"},"listener")," function for the event named ",(0,a.yg)("em",{parentName:"p"},"eventName")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},'socket.once("details", (...args) => {\n  // ...\n});\n')),(0,a.yg)("h3",{id:"socketoffeventname-listener"},"socket.off(eventName, listener)"),(0,a.yg)("p",null,"Removes the specified ",(0,a.yg)("em",{parentName:"p"},"listener")," from the listener array for the event named ",(0,a.yg)("em",{parentName:"p"},"eventName"),"."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},'const listener = (...args) => {\n  console.log(args);\n}\n\nsocket.on("details", listener);\n\n// and then later...\nsocket.off("details", listener);\n')),(0,a.yg)("h3",{id:"socketremovealllistenerseventname"},"socket.removeAllListeners(","[eventName]",")"),(0,a.yg)("p",null,"Removes all listeners, or those of the specified ",(0,a.yg)("em",{parentName:"p"},"eventName"),"."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},'// for a specific event\nsocket.removeAllListeners("details");\n// for all events\nsocket.removeAllListeners();\n')),(0,a.yg)("h2",{id:"catch-all-listeners"},"Catch-all listeners"),(0,a.yg)("p",null,"Since Socket.IO v3, a new API inspired from the ",(0,a.yg)("a",{parentName:"p",href:"https://github.com/EventEmitter2/EventEmitter2"},"EventEmitter2")," library allows to declare catch-all listeners."),(0,a.yg)("p",null,"This feature is available on both the client and the server."),(0,a.yg)("h3",{id:"socketonanylistener"},"socket.onAny(listener)"),(0,a.yg)("p",null,"Adds a listener that will be fired when any event is emitted."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},"socket.onAny((eventName, ...args) => {\n  // ...\n});\n")),(0,a.yg)("admonition",{type:"caution"},(0,a.yg)("p",{parentName:"admonition"},(0,a.yg)("a",{parentName:"p",href:"/docs/v4/emitting-events/#acknowledgements"},"Acknowledgements")," are not caught in the catch-all listener."),(0,a.yg)("pre",{parentName:"admonition"},(0,a.yg)("code",{parentName:"pre",className:"language-js"},'socket.emit("foo", (value) => {\n  // ...\n});\n\nsocket.onAnyOutgoing(() => {\n  // triggered when the event is sent\n});\n\nsocket.onAny(() => {\n  // not triggered when the acknowledgement is received\n});\n'))),(0,a.yg)("h3",{id:"socketprependanylistener"},"socket.prependAny(listener)"),(0,a.yg)("p",null,"Adds a listener that will be fired when any event is emitted. The listener is added to the beginning of the listeners array."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},"socket.prependAny((eventName, ...args) => {\n  // ...\n});\n")),(0,a.yg)("h3",{id:"socketoffanylistener"},"socket.offAny(","[listener]",")"),(0,a.yg)("p",null,"Removes all catch-all listeners, or the given listener."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},"const listener = (eventName, ...args) => {\n  console.log(eventName, args);\n}\n\nsocket.onAny(listener);\n\n// and then later...\nsocket.offAny(listener);\n\n// or all listeners\nsocket.offAny();\n")),(0,a.yg)("h3",{id:"socketonanyoutgoinglistener"},"socket.onAnyOutgoing(listener)"),(0,a.yg)("p",null,"Register a new catch-all listener for outgoing packets."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},"socket.onAnyOutgoing((event, ...args) => {\n  // ...\n});\n")),(0,a.yg)("admonition",{type:"caution"},(0,a.yg)("p",{parentName:"admonition"},(0,a.yg)("a",{parentName:"p",href:"/docs/v4/emitting-events/#acknowledgements"},"Acknowledgements")," are not caught in the catch-all listener."),(0,a.yg)("pre",{parentName:"admonition"},(0,a.yg)("code",{parentName:"pre",className:"language-js"},'socket.on("foo", (value, callback) => {\n  callback("OK");\n});\n\nsocket.onAny(() => {\n  // triggered when the event is received\n});\n\nsocket.onAnyOutgoing(() => {\n  // not triggered when the acknowledgement is sent\n});\n'))),(0,a.yg)("h3",{id:"socketprependanyoutgoinglistener"},"socket.prependAnyOutgoing(listener)"),(0,a.yg)("p",null,"Register a new catch-all listener for outgoing packets. The listener is added to the beginning of the listeners array."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},"socket.prependAnyOutgoing((event, ...args) => {\n  // ...\n});\n")),(0,a.yg)("h3",{id:"socketoffanyoutgoinglistener"},"socket.offAnyOutgoing(","[listener]",")"),(0,a.yg)("p",null,"Removes the previously registered listener. If no listener is provided, all catch-all listeners are removed."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},"const listener = (eventName, ...args) => {\n  console.log(eventName, args);\n}\n\nsocket.onAnyOutgoing(listener);\n\n// remove a single listener\nsocket.offAnyOutgoing(listener);\n\n// remove all listeners\nsocket.offAnyOutgoing();\n")),(0,a.yg)("h2",{id:"validation"},"Validation"),(0,a.yg)("p",null,"The validation of the event arguments is out of the scope of the Socket.IO library."),(0,a.yg)("p",null,"There are many packages in the JS ecosystem which cover this use case, among them:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://www.npmjs.com/package/joi"},"joi")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://www.npmjs.com/package/ajv"},"ajv")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://www.npmjs.com/package/validatorjs"},"validatorjs"))),(0,a.yg)("p",null,"Example with ",(0,a.yg)("a",{parentName:"p",href:"https://joi.dev/api/"},"joi")," and ",(0,a.yg)("a",{parentName:"p",href:"/docs/v4/emitting-events/#acknowledgements"},"acknowledgements"),":"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},'const Joi = require("joi");\n\nconst userSchema = Joi.object({\n  username: Joi.string().max(30).required(),\n  email: Joi.string().email().required()\n});\n\nio.on("connection", (socket) => {\n  socket.on("create user", (payload, callback) => {\n    if (typeof callback !== "function") {\n      // not an acknowledgement\n      return socket.disconnect();\n    }\n    const { error, value } = userSchema.validate(payload);\n    if (error) {\n      return callback({\n        status: "Bad Request",\n        error\n      });\n    }\n    // do something with the value, and then\n    callback({\n      status: "OK"\n    });\n  });\n\n});\n')),(0,a.yg)("h2",{id:"error-handling"},"Error handling"),(0,a.yg)("p",null,"There is currently no built-in error handling in the Socket.IO library, which means you must catch any error that could be thrown in a listener."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},'io.on("connection", (socket) => {\n  socket.on("list items", async (callback) => {\n    try {\n      const items = await findItems();\n      callback({\n        status: "OK",\n        items\n      });\n    } catch (e) {\n      callback({\n        status: "NOK"\n      });\n    }\n  });\n});\n')),(0,a.yg)("p",null,"This can be refactored into:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},'const errorHandler = (handler) => {\n  const handleError = (err) => {\n    console.error("please handle me", err);\n  };\n\n  return (...args) => {\n    try {\n      const ret = handler.apply(this, args);\n      if (ret && typeof ret.catch === "function") {\n        // async handler\n        ret.catch(handleError);\n      }\n    } catch (e) {\n      // sync handler\n      handleError(e);\n    }\n  };\n};\n\n// server or client side\nsocket.on("hello", errorHandler(() => {\n  throw new Error("let\'s panic");\n}));\n')))}m.isMDXComponent=!0}}]);