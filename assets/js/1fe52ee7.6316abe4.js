"use strict";(self.webpackChunksample_website=self.webpackChunksample_website||[]).push([[4055],{5680:(e,n,t)=>{t.d(n,{xA:()=>d,yg:()=>y});var a=t(6540);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=a.createContext({}),s=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},d=function(e){var n=s(e.components);return a.createElement(l.Provider,{value:n},e.children)},p="mdxType",g={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),p=s(t),m=o,y=p["".concat(l,".").concat(m)]||p[m]||g[m]||i;return t?a.createElement(y,r(r({ref:n},d),{},{components:t})):a.createElement(y,r({ref:n},d))}));function y(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,r=new Array(i);r[0]=m;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c[p]="string"==typeof e?e:o,r[1]=c;for(var s=2;s<i;s++)r[s]=t[s];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},2322:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>y,frontMatter:()=>c,metadata:()=>s,toc:()=>p});var a=t(8168),o=(t(6540),t(5680)),i=t(1653),r=t(6025);const c={title:"The Socket instance (client-side)",sidebar_label:"The Socket instance",sidebar_position:3,slug:"/client-socket-instance/"},l=void 0,s={unversionedId:"categories/Client/client-socket-instance",id:"categories/Client/client-socket-instance",title:"The Socket instance (client-side)",description:"A Socket is the fundamental class for interacting with the server. It inherits most of the methods of the Node.js EventEmitter, like emit, on, once or off.",source:"@site/docs/categories/03-Client/client-socket-instance.md",sourceDirName:"categories/03-Client",slug:"/client-socket-instance/",permalink:"/docs/v4/client-socket-instance/",draft:!1,editUrl:"https://github.com/socketio/nhonvo.github.io/edit/main/docs/categories/03-Client/client-socket-instance.md",tags:[],version:"current",lastUpdatedAt:1712320209,formattedLastUpdatedAt:"Apr 5, 2024",sidebarPosition:3,frontMatter:{title:"The Socket instance (client-side)",sidebar_label:"The Socket instance",sidebar_position:3,slug:"/client-socket-instance/"},sidebar:"sidebar",previous:{title:"Initialization",permalink:"/docs/v4/client-initialization/"},next:{title:"Offline behavior",permalink:"/docs/v4/client-offline-behavior/"}},d={},p=[{value:"Socket#id",id:"socketid",level:2},{value:"Socket#connected",id:"socketconnected",level:2},{value:"Socket#io",id:"socketio",level:2},{value:"Lifecycle",id:"lifecycle",level:2},{value:"Events",id:"events",level:2},{value:"<code>connect</code>",id:"connect",level:3},{value:"<code>connect_error</code>",id:"connect_error",level:3},{value:"<code>disconnect</code>",id:"disconnect",level:3},{value:"Complete API",id:"complete-api",level:2}],g={toc:p},m="wrapper";function y(e){let{components:n,...t}=e;return(0,o.yg)(m,(0,a.A)({},g,t,{components:n,mdxType:"MDXLayout"}),(0,o.yg)("p",null,"A ",(0,o.yg)("inlineCode",{parentName:"p"},"Socket")," is the fundamental class for interacting with the server. It inherits most of the methods of the Node.js ",(0,o.yg)("a",{parentName:"p",href:"https://nodejs.org/api/events.html#class-eventemitter"},"EventEmitter"),", like ",(0,o.yg)("a",{parentName:"p",href:"/docs/v4/client-api/#socketemiteventname-args"},"emit"),", ",(0,o.yg)("a",{parentName:"p",href:"/docs/v4/client-api/#socketoneventname-callback"},"on"),", ",(0,o.yg)("a",{parentName:"p",href:"/docs/v4/client-api/#socketonceeventname-callback"},"once")," or ",(0,o.yg)("a",{parentName:"p",href:"/docs/v4/client-api/#socketoffeventname"},"off"),"."),(0,o.yg)(i.A,{alt:"Bidirectional communication between server and client",sources:{light:(0,r.A)("/images/bidirectional-communication-socket.png"),dark:(0,r.A)("/images/bidirectional-communication-socket-dark.png")},mdxType:"ThemedImage"}),(0,o.yg)("br",null),(0,o.yg)("br",null),(0,o.yg)("p",null,"Besides ",(0,o.yg)("a",{parentName:"p",href:"/docs/v4/emitting-events/"},"emitting")," and ",(0,o.yg)("a",{parentName:"p",href:"/docs/v4/listening-to-events/"},"listening to")," events, the Socket instance has a few attributes that may be of use in your application:"),(0,o.yg)("h2",{id:"socketid"},"Socket#id"),(0,o.yg)("p",null,"Each new connection is assigned a random 20-characters identifier."),(0,o.yg)("p",null,"This identifier is synced with the value on the server-side."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},'// server-side\nio.on("connection", (socket) => {\n  console.log(socket.id); // x8WIv7-mJelg7on_ALbx\n});\n\n// client-side\nsocket.on("connect", () => {\n  console.log(socket.id); // x8WIv7-mJelg7on_ALbx\n});\n\nsocket.on("disconnect", () => {\n  console.log(socket.id); // undefined\n});\n')),(0,o.yg)("admonition",{type:"caution"},(0,o.yg)("p",{parentName:"admonition"},"Please note that, unless ",(0,o.yg)("a",{parentName:"p",href:"/docs/v4/connection-state-recovery"},"connection state recovery")," is enabled, the ",(0,o.yg)("inlineCode",{parentName:"p"},"id")," attribute is an ",(0,o.yg)("strong",{parentName:"p"},"ephemeral")," ID that is not meant to be used in your application (or only for debugging purposes) because:"),(0,o.yg)("ul",{parentName:"admonition"},(0,o.yg)("li",{parentName:"ul"},"this ID is regenerated after each reconnection (for example when the WebSocket connection is severed, or when the user refreshes the page)"),(0,o.yg)("li",{parentName:"ul"},"two different browser tabs will have two different IDs"),(0,o.yg)("li",{parentName:"ul"},"there is no message queue stored for a given ID on the server (i.e. if the client is disconnected, the messages sent from the server to this ID are lost)")),(0,o.yg)("p",{parentName:"admonition"},"Please use a regular session ID instead (either sent in a cookie, or stored in the localStorage and sent in the ",(0,o.yg)("a",{parentName:"p",href:"/docs/v4/client-options/#auth"},(0,o.yg)("inlineCode",{parentName:"a"},"auth"))," payload)."),(0,o.yg)("p",{parentName:"admonition"},"See also:"),(0,o.yg)("ul",{parentName:"admonition"},(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("a",{parentName:"li",href:"/get-started/private-messaging-part-2/"},"Part II of our private message guide")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("a",{parentName:"li",href:"/how-to/deal-with-cookies"},"How to deal with cookies")))),(0,o.yg)("h2",{id:"socketconnected"},"Socket#connected"),(0,o.yg)("p",null,"This attribute describes whether the socket is currently connected to the server."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},'socket.on("connect", () => {\n  console.log(socket.connected); // true\n});\n\nsocket.on("disconnect", () => {\n  console.log(socket.connected); // false\n});\n')),(0,o.yg)("h2",{id:"socketio"},"Socket#io"),(0,o.yg)("p",null,"A reference to the underlying ",(0,o.yg)("a",{parentName:"p",href:"/docs/v4/client-api/#manager"},"Manager"),"."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},'socket.on("connect", () => {\n  const engine = socket.io.engine;\n  console.log(engine.transport.name); // in most cases, prints "polling"\n\n  engine.once("upgrade", () => {\n    // called when the transport is upgraded (i.e. from HTTP long-polling to WebSocket)\n    console.log(engine.transport.name); // in most cases, prints "websocket"\n  });\n\n  engine.on("packet", ({ type, data }) => {\n    // called for each packet received\n  });\n\n  engine.on("packetCreate", ({ type, data }) => {\n    // called for each packet sent\n  });\n\n  engine.on("drain", () => {\n    // called when the write buffer is drained\n  });\n\n  engine.on("close", (reason) => {\n    // called when the underlying connection is closed\n  });\n});\n')),(0,o.yg)("h2",{id:"lifecycle"},"Lifecycle"),(0,o.yg)(i.A,{alt:"Lifecycle diagram",sources:{light:(0,r.A)("/images/client_socket_events.png"),dark:(0,r.A)("/images/client_socket_events-dark.png")},mdxType:"ThemedImage"}),(0,o.yg)("h2",{id:"events"},"Events"),(0,o.yg)("p",null,"The Socket instance emits three special events:"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("a",{parentName:"li",href:"#connect"},(0,o.yg)("inlineCode",{parentName:"a"},"connect"))),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("a",{parentName:"li",href:"#connect_error"},(0,o.yg)("inlineCode",{parentName:"a"},"connect_error"))),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("a",{parentName:"li",href:"#disconnect"},(0,o.yg)("inlineCode",{parentName:"a"},"disconnect")))),(0,o.yg)("admonition",{type:"tip"},(0,o.yg)("p",{parentName:"admonition"},"Since Socket.IO v3, the Socket instance does not emit any event related to the reconnection logic anymore. You can listen to the events on the Manager instance directly:"),(0,o.yg)("pre",{parentName:"admonition"},(0,o.yg)("code",{parentName:"pre",className:"language-js"},'socket.io.on("reconnect_attempt", () => {\n  // ...\n});\n\nsocket.io.on("reconnect", () => {\n  // ...\n});\n')),(0,o.yg)("p",{parentName:"admonition"},"More information can be found in the ",(0,o.yg)("a",{parentName:"p",href:"/docs/v4/migrating-from-2-x-to-3-0/#the-socket-instance-will-no-longer-forward-the-events-emitted-by-its-manager"},"migration guide"),".")),(0,o.yg)("h3",{id:"connect"},(0,o.yg)("inlineCode",{parentName:"h3"},"connect")),(0,o.yg)("p",null,"This event is fired by the Socket instance upon connection ",(0,o.yg)("strong",{parentName:"p"},"and")," reconnection."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},'socket.on("connect", () => {\n  // ...\n});\n')),(0,o.yg)("admonition",{type:"caution"},(0,o.yg)("p",{parentName:"admonition"},"Event handlers shouldn't be registered in the ",(0,o.yg)("inlineCode",{parentName:"p"},"connect")," handler itself, as a new handler will be registered every time the socket instance reconnects:"),(0,o.yg)("p",{parentName:"admonition"},"BAD \u26a0\ufe0f"),(0,o.yg)("pre",{parentName:"admonition"},(0,o.yg)("code",{parentName:"pre",className:"language-js"},'socket.on("connect", () => {\n  socket.on("data", () => { /* ... */ });\n});\n')),(0,o.yg)("p",{parentName:"admonition"},"GOOD \ud83d\udc4d"),(0,o.yg)("pre",{parentName:"admonition"},(0,o.yg)("code",{parentName:"pre",className:"language-js"},'socket.on("connect", () => {\n  // ...\n});\n\nsocket.on("data", () => { /* ... */ });\n'))),(0,o.yg)("h3",{id:"connect_error"},(0,o.yg)("inlineCode",{parentName:"h3"},"connect_error")),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"error")," ",(0,o.yg)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error"},(0,o.yg)("inlineCode",{parentName:"a"},"<Error>")))),(0,o.yg)("p",null,"This event is fired upon connection failure."),(0,o.yg)("table",null,(0,o.yg)("thead",{parentName:"table"},(0,o.yg)("tr",{parentName:"thead"},(0,o.yg)("th",{parentName:"tr",align:null},"Reason"),(0,o.yg)("th",{parentName:"tr",align:null},"Automatic reconnection?"))),(0,o.yg)("tbody",{parentName:"table"},(0,o.yg)("tr",{parentName:"tbody"},(0,o.yg)("td",{parentName:"tr",align:null},"The low-level connection cannot be established (temporary failure)"),(0,o.yg)("td",{parentName:"tr",align:null},"\u2705 YES")),(0,o.yg)("tr",{parentName:"tbody"},(0,o.yg)("td",{parentName:"tr",align:null},"The connection was denied by the server in a ",(0,o.yg)("a",{parentName:"td",href:"/docs/v4/middlewares/"},"middleware function")),(0,o.yg)("td",{parentName:"tr",align:null},"\u274c NO")))),(0,o.yg)("p",null,"The ",(0,o.yg)("a",{parentName:"p",href:"/docs/v4/client-api/#socketactive"},(0,o.yg)("inlineCode",{parentName:"a"},"socket.active"))," attribute indicates whether the socket will automatically try to reconnect after a small ",(0,o.yg)("a",{parentName:"p",href:"/docs/v4/client-options/#reconnectiondelay"},"randomized delay"),":"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},'socket.on("connect_error", (error) => {\n  if (socket.active) {\n    // temporary failure, the socket will automatically try to reconnect\n  } else {\n    // the connection was denied by the server\n    // in that case, `socket.connect()` must be manually called in order to reconnect\n    console.log(error.message);\n  }\n});\n')),(0,o.yg)("h3",{id:"disconnect"},(0,o.yg)("inlineCode",{parentName:"h3"},"disconnect")),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"reason")," ",(0,o.yg)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#string_type"},(0,o.yg)("inlineCode",{parentName:"a"},"<string>"))),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"details")," ",(0,o.yg)("inlineCode",{parentName:"li"},"<DisconnectDetails>"))),(0,o.yg)("p",null,"This event is fired upon disconnection."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},'socket.on("disconnect", (reason, details) => {\n  // ...\n});\n')),(0,o.yg)("p",null,"Here is the list of possible reasons:"),(0,o.yg)("table",null,(0,o.yg)("thead",{parentName:"table"},(0,o.yg)("tr",{parentName:"thead"},(0,o.yg)("th",{parentName:"tr",align:null},"Reason"),(0,o.yg)("th",{parentName:"tr",align:null},"Description"),(0,o.yg)("th",{parentName:"tr",align:"left"},"Automatic reconnection?"))),(0,o.yg)("tbody",{parentName:"table"},(0,o.yg)("tr",{parentName:"tbody"},(0,o.yg)("td",{parentName:"tr",align:null},(0,o.yg)("inlineCode",{parentName:"td"},"io server disconnect")),(0,o.yg)("td",{parentName:"tr",align:null},"The server has forcefully disconnected the socket with ",(0,o.yg)("a",{parentName:"td",href:"/docs/v4/server-api/#socketdisconnectclose"},"socket.disconnect()")),(0,o.yg)("td",{parentName:"tr",align:"left"},"\u274c NO")),(0,o.yg)("tr",{parentName:"tbody"},(0,o.yg)("td",{parentName:"tr",align:null},(0,o.yg)("inlineCode",{parentName:"td"},"io client disconnect")),(0,o.yg)("td",{parentName:"tr",align:null},"The socket was manually disconnected using ",(0,o.yg)("a",{parentName:"td",href:"/docs/v4/client-api/#socketdisconnect"},"socket.disconnect()")),(0,o.yg)("td",{parentName:"tr",align:"left"},"\u274c NO")),(0,o.yg)("tr",{parentName:"tbody"},(0,o.yg)("td",{parentName:"tr",align:null},(0,o.yg)("inlineCode",{parentName:"td"},"ping timeout")),(0,o.yg)("td",{parentName:"tr",align:null},"The server did not send a PING within the ",(0,o.yg)("inlineCode",{parentName:"td"},"pingInterval + pingTimeout")," range"),(0,o.yg)("td",{parentName:"tr",align:"left"},"\u2705 YES")),(0,o.yg)("tr",{parentName:"tbody"},(0,o.yg)("td",{parentName:"tr",align:null},(0,o.yg)("inlineCode",{parentName:"td"},"transport close")),(0,o.yg)("td",{parentName:"tr",align:null},"The connection was closed (example: the user has lost connection, or the network was changed from WiFi to 4G)"),(0,o.yg)("td",{parentName:"tr",align:"left"},"\u2705 YES")),(0,o.yg)("tr",{parentName:"tbody"},(0,o.yg)("td",{parentName:"tr",align:null},(0,o.yg)("inlineCode",{parentName:"td"},"transport error")),(0,o.yg)("td",{parentName:"tr",align:null},"The connection has encountered an error (example: the server was killed during a HTTP long-polling cycle)"),(0,o.yg)("td",{parentName:"tr",align:"left"},"\u2705 YES")))),(0,o.yg)("p",null,"The ",(0,o.yg)("a",{parentName:"p",href:"/docs/v4/client-api/#socketactive"},(0,o.yg)("inlineCode",{parentName:"a"},"socket.active"))," attribute indicates whether the socket will automatically try to reconnect after a small ",(0,o.yg)("a",{parentName:"p",href:"/docs/v4/client-options/#reconnectiondelay"},"randomized delay"),":"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},'socket.on("disconnect", (reason) => {\n  if (socket.active) {\n    // temporary disconnection, the socket will automatically try to reconnect\n  } else {\n    // the connection was forcefully closed by the server or the client itself\n    // in that case, `socket.connect()` must be manually called in order to reconnect\n    console.log(reason);\n  }\n});\n')),(0,o.yg)("admonition",{type:"caution"},(0,o.yg)("p",{parentName:"admonition"},"The following event names are reserved and must not be used in your application:"),(0,o.yg)("ul",{parentName:"admonition"},(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"connect")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"connect_error")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"disconnect")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"disconnecting")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"newListener")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"removeListener"))),(0,o.yg)("pre",{parentName:"admonition"},(0,o.yg)("code",{parentName:"pre",className:"language-js"},'// BAD, will throw an error\nsocket.emit("disconnect");\n'))),(0,o.yg)("h2",{id:"complete-api"},"Complete API"),(0,o.yg)("p",null,"The complete API exposed by the Socket instance can be found ",(0,o.yg)("a",{parentName:"p",href:"/docs/v4/client-api/#socket"},"here"),"."))}y.isMDXComponent=!0}}]);