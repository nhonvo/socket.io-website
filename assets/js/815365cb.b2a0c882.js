"use strict";(self.webpackChunksample_website=self.webpackChunksample_website||[]).push([[1546],{5680:(e,t,a)=>{a.d(t,{xA:()=>l,yg:()=>u});var n=a(6540);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},s=Object.keys(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),c=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},l=function(e){var t=c(e.components);return n.createElement(p.Provider,{value:t},e.children)},m="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,s=e.originalType,p=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),m=c(a),d=r,u=m["".concat(p,".").concat(d)]||m[d]||g[d]||s;return a?n.createElement(u,o(o({ref:t},l),{},{components:a})):n.createElement(u,o({ref:t},l))}));function u(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=a.length,o=new Array(s);o[0]=d;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[m]="string"==typeof e?e:r,o[1]=i;for(var c=2;c<s;c++)o[c]=a[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},4174:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>g,frontMatter:()=>s,metadata:()=>i,toc:()=>c});var n=a(8168),r=(a(6540),a(5680));const s={title:"Custom parser",sidebar_position:2,slug:"/custom-parser/"},o=void 0,i={unversionedId:"categories/Advanced/custom-parser",id:"categories/Advanced/custom-parser",title:"Custom parser",description:"Since Socket.IO v2.0.0, it is now possible to provide your own parser, in order to control the marshalling / unmarshalling of packets.",source:"@site/docs/categories/06-Advanced/custom-parser.md",sourceDirName:"categories/06-Advanced",slug:"/custom-parser/",permalink:"/socket.io-website/docs/v4/custom-parser/",draft:!1,editUrl:"https://github.com/socketio/socket.io-website/edit/main/docs/categories/06-Advanced/custom-parser.md",tags:[],version:"current",lastUpdatedAt:1711104160,formattedLastUpdatedAt:"Mar 22, 2024",sidebarPosition:2,frontMatter:{title:"Custom parser",sidebar_position:2,slug:"/custom-parser/"},sidebar:"sidebar",previous:{title:"Namespaces",permalink:"/socket.io-website/docs/v4/namespaces/"},next:{title:"Admin UI",permalink:"/socket.io-website/docs/v4/admin-ui/"}},p={},c=[{value:"Available parsers",id:"available-parsers",level:2},{value:"Implementing your own parser",id:"implementing-your-own-parser",level:2},{value:"The default parser",id:"the-default-parser",level:2},{value:"The msgpack parser",id:"the-msgpack-parser",level:2}],l={toc:c},m="wrapper";function g(e){let{components:t,...a}=e;return(0,r.yg)(m,(0,n.A)({},l,a,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("p",null,"Since Socket.IO v2.0.0, it is now possible to provide your own parser, in order to control the marshalling / unmarshalling of packets."),(0,r.yg)("p",null,(0,r.yg)("em",{parentName:"p"},"Server")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},'import { Server } from "socket.io";\n\nconst io = new Server({\n  parser: myParser\n});\n')),(0,r.yg)("p",null,(0,r.yg)("em",{parentName:"p"},"Client")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},'import { io } from "socket.io-client";\n\nconst socket = io({\n  parser: myParser\n});\n')),(0,r.yg)("h2",{id:"available-parsers"},"Available parsers"),(0,r.yg)("p",null,"Besides ",(0,r.yg)("a",{parentName:"p",href:"#the-default-parser"},"the default parser"),", here is the list of available parsers:"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Package"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("a",{parentName:"td",href:"https://www.npmjs.com/package/socket.io-circular-parser"},(0,r.yg)("inlineCode",{parentName:"a"},"socket.io-circular-parser"))),(0,r.yg)("td",{parentName:"tr",align:null},"Similar to the default parser, but handles circular references.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("a",{parentName:"td",href:"https://www.npmjs.com/package/socket.io-msgpack-parser"},(0,r.yg)("inlineCode",{parentName:"a"},"socket.io-msgpack-parser"))),(0,r.yg)("td",{parentName:"tr",align:null},"Uses ",(0,r.yg)("a",{parentName:"td",href:"https://msgpack.org/"},"MessagePack")," to encode the packets (based on the ",(0,r.yg)("a",{parentName:"td",href:"https://github.com/darrachequesne/notepack"},(0,r.yg)("inlineCode",{parentName:"a"},"notepack.io"))," package).")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("a",{parentName:"td",href:"https://www.npmjs.com/package/@skgdev/socket.io-msgpack-javascript"},(0,r.yg)("inlineCode",{parentName:"a"},"@skgdev/socket.io-msgpack-javascript"))),(0,r.yg)("td",{parentName:"tr",align:null},"Uses ",(0,r.yg)("a",{parentName:"td",href:"https://msgpack.org/"},"MessagePack")," to encode the packets (based on the ",(0,r.yg)("a",{parentName:"td",href:"https://github.com/msgpack/msgpack-javascript"},(0,r.yg)("inlineCode",{parentName:"a"},"@msgpack/msgpack"))," package).")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("a",{parentName:"td",href:"https://www.npmjs.com/package/socket.io-json-parser"},(0,r.yg)("inlineCode",{parentName:"a"},"socket.io-json-parser"))),(0,r.yg)("td",{parentName:"tr",align:null},"Uses ",(0,r.yg)("inlineCode",{parentName:"td"},"JSON.stringify()")," and ",(0,r.yg)("inlineCode",{parentName:"td"},"JSON.parse()")," to encode the packets.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("a",{parentName:"td",href:"https://www.npmjs.com/package/socket.io-cbor-x-parser"},(0,r.yg)("inlineCode",{parentName:"a"},"socket.io-cbor-x-parser"))),(0,r.yg)("td",{parentName:"tr",align:null},"Uses ",(0,r.yg)("a",{parentName:"td",href:"https://github.com/kriszyp/cbor-x"},"cbor-x")," to encode the packets.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("a",{parentName:"td",href:"https://www.npmjs.com/package/@socket.io/devalue-parser"},(0,r.yg)("inlineCode",{parentName:"a"},"@socket.io/devalue-parser"))),(0,r.yg)("td",{parentName:"tr",align:null},"Uses ",(0,r.yg)("a",{parentName:"td",href:"https://github.com/Rich-Harris/devalue"},"devalue")," to encode the packets.")))),(0,r.yg)("h2",{id:"implementing-your-own-parser"},"Implementing your own parser"),(0,r.yg)("p",null,"Here is a basic example with a parser that uses the ",(0,r.yg)("inlineCode",{parentName:"p"},"JSON.stringify()")," and ",(0,r.yg)("inlineCode",{parentName:"p"},"JSON.parse()")," methods:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},'import { Emitter } from "@socket.io/component-emitter"; // polyfill of Node.js EventEmitter in the browser\n\nclass Encoder {\n  /**\n   * Encode a packet into a list of strings/buffers\n   */\n  encode(packet) {\n    return [JSON.stringify(packet)];\n  }\n}\n\nfunction isObject(value) {\n  return Object.prototype.toString.call(value) === "[object Object]";\n}\n\nclass Decoder extends Emitter {\n  /**\n   * Receive a chunk (string or buffer) and optionally emit a "decoded" event with the reconstructed packet\n   */\n  add(chunk) {\n    const packet = JSON.parse(chunk);\n    if (this.isPacketValid(packet)) {\n      this.emit("decoded", packet);\n    } else {\n      throw new Error("invalid format");\n    }\n  }\n  isPacketValid({ type, data, nsp, id }) {\n    const isNamespaceValid = typeof nsp === "string";\n    const isAckIdValid = id === undefined || Number.isInteger(id);\n    if (!isNamespaceValid || !isAckIdValid) {\n      return false;\n    }\n    switch (type) {\n      case 0: // CONNECT\n        return data === undefined || isObject(data);\n      case 1: // DISCONNECT\n        return data === undefined;\n      case 2: // EVENT\n        return Array.isArray(data) && typeof data[0] === "string";\n      case 3: // ACK\n        return Array.isArray(data);\n      case 4: // CONNECT_ERROR\n        return isObject(data);\n      default:\n        return false;\n    }\n  }\n  /**\n   * Clean up internal buffers\n   */\n  destroy() {}\n}\n\nexport const parser = { Encoder, Decoder };\n')),(0,r.yg)("h2",{id:"the-default-parser"},"The default parser"),(0,r.yg)("p",null,"The source code of the default parser (the ",(0,r.yg)("inlineCode",{parentName:"p"},"socket.io-parser")," package) can be found here: ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/socketio/socket.io-parser"},"https://github.com/socketio/socket.io-parser")),(0,r.yg)("p",null,"Example of output:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"basic emit")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},'socket.emit("test", 42);\n')),(0,r.yg)("p",null,"will be encoded as:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},'2["test",42]\n||\n|\u2514\u2500 JSON-encoded payload\n\u2514\u2500 packet type (2 => EVENT)\n')),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"emit with binary, acknowledgement and custom namespace")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},'socket.emit("test", Uint8Array.from([42]), () => {\n  console.log("ack received");\n});\n')),(0,r.yg)("p",null,"will be encoded as:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},'51-/admin,13["test",{"_placeholder":true,"num":0}]\n||||     || \u2514\u2500 JSON-encoded payload with placeholders for binary attachments\n||||     |\u2514\u2500 acknowledgement id\n||||     \u2514\u2500 separator\n|||\u2514\u2500 namespace (not included when it\'s the main namespace)\n||\u2514\u2500 separator\n|\u2514\u2500 number of binary attachments\n\u2514\u2500 packet type (5 => BINARY EVENT)\n\nand an additional attachment (the extracted Uint8Array)\n')),(0,r.yg)("p",null,"Pros:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"the binary attachments is then base64-encoded, so this parser is compatible with browsers that ",(0,r.yg)("a",{parentName:"li",href:"https://caniuse.com/mdn-javascript_builtins_arraybuffer"},"do not support Arraybuffers"),", like IE9")),(0,r.yg)("p",null,"Cons:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"packets with binary content are sent as two distinct WebSocket frames (if the WebSocket connection is established)")),(0,r.yg)("h2",{id:"the-msgpack-parser"},"The msgpack parser"),(0,r.yg)("p",null,"This parser uses the ",(0,r.yg)("a",{parentName:"p",href:"https://msgpack.org/"},"MessagePack")," serialization format."),(0,r.yg)("p",null,"The source code of this parser can be found here: ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/socketio/socket.io-msgpack-parser"},"https://github.com/socketio/socket.io-msgpack-parser")),(0,r.yg)("p",null,"Sample usage:"),(0,r.yg)("p",null,(0,r.yg)("em",{parentName:"p"},"Server")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},'import { Server } from "socket.io";\nimport customParser from "socket.io-msgpack-parser";\n\nconst io = new Server({\n  parser: customParser\n});\n')),(0,r.yg)("p",null,(0,r.yg)("em",{parentName:"p"},"Client (Node.js)")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},'import { io } from "socket.io-client";\nimport customParser from "socket.io-msgpack-parser";\n\nconst socket = io("https://example.com", {\n  parser: customParser\n});\n')),(0,r.yg)("p",null,"In the browser, there is now an official bundle which includes this parser:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://cdn.socket.io/4.7.5/socket.io.msgpack.min.js"},"https://cdn.socket.io/4.7.5/socket.io.msgpack.min.js")),(0,r.yg)("li",{parentName:"ul"},"cdnjs: ",(0,r.yg)("a",{parentName:"li",href:"https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.7.5/socket.io.msgpack.min.js"},"https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.7.5/socket.io.msgpack.min.js")),(0,r.yg)("li",{parentName:"ul"},"jsDelivr: ",(0,r.yg)("a",{parentName:"li",href:"https://cdn.jsdelivr.net/npm/socket.io-client@4.7.5/dist/socket.io.msgpack.min.js"},"https://cdn.jsdelivr.net/npm/socket.io-client@4.7.5/dist/socket.io.msgpack.min.js")),(0,r.yg)("li",{parentName:"ul"},"unpkg: ",(0,r.yg)("a",{parentName:"li",href:"https://unpkg.com/socket.io-client@4.7.5/dist/socket.io.msgpack.min.js"},"https://unpkg.com/socket.io-client@4.7.5/dist/socket.io.msgpack.min.js"))),(0,r.yg)("p",null,"In that case, you don't need to specify the ",(0,r.yg)("inlineCode",{parentName:"p"},"parser")," option."),(0,r.yg)("p",null,"Pros:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"packets with binary content are sent as one single WebSocket frame (if the WebSocket connection is established)"),(0,r.yg)("li",{parentName:"ul"},"may result in smaller payloads (especially when using a lot of numbers)")),(0,r.yg)("p",null,"Cons:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"incompatible with browsers that ",(0,r.yg)("a",{parentName:"li",href:"https://caniuse.com/mdn-javascript_builtins_arraybuffer"},"do not support Arraybuffers"),", like IE9"),(0,r.yg)("li",{parentName:"ul"},"harder to debug in the Network tab of the browser")),(0,r.yg)("admonition",{type:"info"},(0,r.yg)("p",{parentName:"admonition"},"Please note that ",(0,r.yg)("inlineCode",{parentName:"p"},"socket.io-msgpack-parser")," relies on the ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/darrachequesne/notepack"},(0,r.yg)("inlineCode",{parentName:"a"},"notepack.io"))," MessagePack implementation. This implementation mainly focuses on performance and minimal bundle size, and thus does not support features like extension types. For a parser based on the ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/msgpack/msgpack-javascript"},"official JavaScript implementation"),", please check ",(0,r.yg)("a",{parentName:"p",href:"https://www.npmjs.com/package/@skgdev/socket.io-msgpack-javascript"},"this package"),".")))}g.isMDXComponent=!0}}]);