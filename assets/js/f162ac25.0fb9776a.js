"use strict";(self.webpackChunksample_website=self.webpackChunksample_website||[]).push([[4499],{5680:(e,t,n)=>{n.d(t,{xA:()=>u,yg:()=>g});var a=n(6540);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),m=c(n),p=r,g=m["".concat(s,".").concat(p)]||m[p]||d[p]||i;return n?a.createElement(g,l(l({ref:t},u),{},{components:n})):a.createElement(g,l({ref:t},u))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=p;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[m]="string"==typeof e?e:r,l[1]=o;for(var c=2;c<i;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},9365:(e,t,n)=>{n.d(t,{A:()=>l});var a=n(6540),r=n(53);const i={tabItem:"tabItem_Ymn6"};function l(e){let{children:t,hidden:n,className:l}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.A)(i.tabItem,l),hidden:n},t)}},1470:(e,t,n)=>{n.d(t,{A:()=>k});var a=n(8168),r=n(6540),i=n(53),l=n(3104),o=n(6347),s=n(7485),c=n(1682),u=n(9466);function m(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}function d(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??m(n);return function(e){const t=(0,c.X)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function p(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function g(e){let{queryString:t=!1,groupId:n}=e;const a=(0,o.W6)(),i=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,s.aZ)(i),(0,r.useCallback)((e=>{if(!i)return;const t=new URLSearchParams(a.location.search);t.set(i,e),a.replace({...a.location,search:t.toString()})}),[i,a])]}function h(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,i=d(e),[l,o]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!p({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:i}))),[s,c]=g({queryString:n,groupId:a}),[m,h]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,i]=(0,u.Dv)(n);return[a,(0,r.useCallback)((e=>{n&&i.set(e)}),[n,i])]}({groupId:a}),y=(()=>{const e=s??m;return p({value:e,tabValues:i})?e:null})();(0,r.useLayoutEffect)((()=>{y&&o(y)}),[y]);return{selectedValue:l,selectValue:(0,r.useCallback)((e=>{if(!p({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);o(e),c(e),h(e)}),[c,h,i]),tabValues:i}}var y=n(2303);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function b(e){let{className:t,block:n,selectedValue:o,selectValue:s,tabValues:c}=e;const u=[],{blockElementScrollPositionUntilNextRender:m}=(0,l.a_)(),d=e=>{const t=e.currentTarget,n=u.indexOf(t),a=c[n].value;a!==o&&(m(t),s(a))},p=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const n=u.indexOf(e.currentTarget)+1;t=u[n]??u[0];break}case"ArrowLeft":{const n=u.indexOf(e.currentTarget)-1;t=u[n]??u[u.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":n},t)},c.map((e=>{let{value:t,label:n,attributes:l}=e;return r.createElement("li",(0,a.A)({role:"tab",tabIndex:o===t?0:-1,"aria-selected":o===t,key:t,ref:e=>u.push(e),onKeyDown:p,onClick:d},l,{className:(0,i.A)("tabs__item",f.tabItem,l?.className,{"tabs__item--active":o===t})}),n??t)})))}function v(e){let{lazy:t,children:n,selectedValue:a}=e;const i=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=i.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},i.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function w(e){const t=h(e);return r.createElement("div",{className:(0,i.A)("tabs-container",f.tabList)},r.createElement(b,(0,a.A)({},e,t)),r.createElement(v,(0,a.A)({},e,t)))}function k(e){const t=(0,y.A)();return r.createElement(w,(0,a.A)({key:String(t)},e))}},1720:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>g,frontMatter:()=>o,metadata:()=>c,toc:()=>m});var a=n(8168),r=(n(6540),n(5680)),i=n(1470),l=n(9365);const o={title:"Tutorial step #8 - Client delivery",sidebar_label:"Step #8: Client delivery",slug:"step-8"},s="Client delivery",c={unversionedId:"tutorial/client-delivery",id:"tutorial/client-delivery",title:"Tutorial step #8 - Client delivery",description:"Let's see how we can make sure that the server always receives the messages sent by the clients.",source:"@site/docs/tutorial/11-client-delivery.md",sourceDirName:"tutorial",slug:"/tutorial/step-8",permalink:"/docs/v4/tutorial/step-8",draft:!1,editUrl:"https://github.com/socketio/socket.io-website/edit/main/docs/tutorial/11-client-delivery.md",tags:[],version:"current",lastUpdatedAt:1700208595,formattedLastUpdatedAt:"Nov 17, 2023",sidebarPosition:11,frontMatter:{title:"Tutorial step #8 - Client delivery",sidebar_label:"Step #8: Client delivery",slug:"step-8"},sidebar:"tutorialSidebar",previous:{title:"Step #7: Server delivery",permalink:"/docs/v4/tutorial/step-7"},next:{title:"Step #9: Scaling horizontally",permalink:"/docs/v4/tutorial/step-9"}},u={},m=[{value:"Buffered events",id:"buffered-events",level:2},{value:"At least once",id:"at-least-once",level:2},{value:"Exactly once",id:"exactly-once",level:2}],d={toc:m},p="wrapper";function g(e){let{components:t,...n}=e;return(0,r.yg)(p,(0,a.A)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"client-delivery"},"Client delivery"),(0,r.yg)("p",null,"Let's see how we can make sure that the server always receives the messages sent by the clients."),(0,r.yg)("admonition",{type:"info"},(0,r.yg)("p",{parentName:"admonition"},'By default, Socket.IO provides an "at most once" guarantee of delivery (also known as "fire and forget"), which means that there will be no retry in case the message does not reach the server.')),(0,r.yg)("h2",{id:"buffered-events"},"Buffered events"),(0,r.yg)("p",null,"When a client gets disconnected, any call to ",(0,r.yg)("inlineCode",{parentName:"p"},"socket.emit()")," is buffered until reconnection:"),(0,r.yg)("video",{controls:!0,width:"100%"},(0,r.yg)("source",{src:"/videos/tutorial/buffered-events.mp4"})),(0,r.yg)("p",null,'In the video above, the "realtime" message is buffered until the connection is reestablished.'),(0,r.yg)("p",null,"This behavior might be totally sufficient for your application. However, there are a few cases where a message could be lost:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"the connection is severed while the event is being sent"),(0,r.yg)("li",{parentName:"ul"},"the server crashes or get restarted while processing the event"),(0,r.yg)("li",{parentName:"ul"},"the database is temporarily not available")),(0,r.yg)("h2",{id:"at-least-once"},"At least once"),(0,r.yg)("p",null,'We can implement an "at least once" guarantee:'),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"manually with an acknowledgement:")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"function emit(socket, event, arg) {\n  socket.timeout(5000).emit(event, arg, (err) => {\n    if (err) {\n      // no ack from the server, let's retry\n      emit(socket, event, arg);\n    }\n  });\n}\n\nemit(socket, 'hello', 'world');\n")),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"or with the ",(0,r.yg)("inlineCode",{parentName:"li"},"retries")," option:")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"const socket = io({\n  ackTimeout: 10000,\n  retries: 3\n});\n\nsocket.emit('hello', 'world');\n")),(0,r.yg)("p",null,"In both cases, the client will retry to send the message until it gets an acknowledgement from the server:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"io.on('connection', (socket) => {\n  socket.on('hello', (value, callback) => {\n    // once the event is successfully handled\n    callback();\n  });\n})\n")),(0,r.yg)("admonition",{type:"tip"},(0,r.yg)("p",{parentName:"admonition"},"With the ",(0,r.yg)("inlineCode",{parentName:"p"},"retries")," option, the order of the messages is guaranteed, as the messages are queued and sent one by one. This is not the case with the first option.")),(0,r.yg)("h2",{id:"exactly-once"},"Exactly once"),(0,r.yg)("p",null,"The problem with retries is that the server might now receive the same message multiple times, so it needs a way to uniquely identify each message, and only store it once in the database."),(0,r.yg)("p",null,'Let\'s see how we can implement an "exactly once" guarantee in our chat application.'),(0,r.yg)("p",null,"We will start by assigning a unique identifier to each message on the client side:"),(0,r.yg)(i.A,{groupId:"syntax",mdxType:"Tabs"},(0,r.yg)(l.A,{value:"es6",label:"ES6",default:!0,mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-html",metastring:'title="index.html"',title:'"index.html"'},"<script>\n  // highlight-next-line\n  let counter = 0;\n\n  const socket = io({\n    auth: {\n      serverOffset: 0\n    },\n    // highlight-start\n    // enable retries\n    ackTimeout: 10000,\n    retries: 3,\n    // highlight-end\n  });\n\n  const form = document.getElementById('form');\n  const input = document.getElementById('input');\n  const messages = document.getElementById('messages');\n\n  form.addEventListener('submit', (e) => {\n    e.preventDefault();\n    if (input.value) {\n      // highlight-start\n      // compute a unique offset\n      const clientOffset = `${socket.id}-${counter++}`;\n      socket.emit('chat message', input.value, clientOffset);\n      // highlight-end\n      input.value = '';\n    }\n  });\n\n  socket.on('chat message', (msg, serverOffset) => {\n    const item = document.createElement('li');\n    item.textContent = msg;\n    messages.appendChild(item);\n    window.scrollTo(0, document.body.scrollHeight);\n    socket.auth.serverOffset = serverOffset;\n  });\n<\/script>\n"))),(0,r.yg)(l.A,{value:"es5",label:"ES5",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-html",metastring:'title="index.html"',title:'"index.html"'},"<script>\n  // highlight-next-line\n  var counter = 0;\n\n  var socket = io({\n    auth: {\n      serverOffset: 0\n    },\n    // highlight-start\n    // enable retries\n    ackTimeout: 10000,\n    retries: 3,\n    // highlight-end\n  });\n\n  var form = document.getElementById('form');\n  var input = document.getElementById('input');\n  var messages = document.getElementById('messages');\n\n  form.addEventListener('submit', function(e) {\n    e.preventDefault();\n    if (input.value) {\n      // highlight-start\n      // compute a unique offset\n      var clientOffset = `${socket.id}-${counter++}`;\n      socket.emit('chat message', input.value, clientOffset);\n      // highlight-end\n      input.value = '';\n    }\n  });\n\n  socket.on('chat message', function(msg, serverOffset) {\n    var item = document.createElement('li');\n    item.textContent = msg;\n    messages.appendChild(item);\n    window.scrollTo(0, document.body.scrollHeight);\n    socket.auth.serverOffset = serverOffset;\n  });\n<\/script>\n")))),(0,r.yg)("admonition",{type:"note"},(0,r.yg)("p",{parentName:"admonition"},"The ",(0,r.yg)("inlineCode",{parentName:"p"},"socket.id")," attribute is a random 20-characters identifier which is assigned to each connection."),(0,r.yg)("p",{parentName:"admonition"},"We could also have used ",(0,r.yg)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues"},(0,r.yg)("inlineCode",{parentName:"a"},"getRandomValues()"))," to generate a unique offset.")),(0,r.yg)("p",null,"And then we store this offset alongside the message on the server side:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js",metastring:'title="index.js"',title:'"index.js"'},"// [...]\n\nio.on('connection', async (socket) => {\n  // highlight-next-line\n  socket.on('chat message', async (msg, clientOffset, callback) => {\n    let result;\n    try {\n      // highlight-next-line\n      result = await db.run('INSERT INTO messages (content, client_offset) VALUES (?, ?)', msg, clientOffset);\n    } catch (e) {\n      // highlight-start\n      if (e.errno === 19 /* SQLITE_CONSTRAINT */ ) {\n        // the message was already inserted, so we notify the client\n        callback();\n      } else {\n        // nothing to do, just let the client retry\n      }\n      return;\n      // highlight-end\n    }\n    io.emit('chat message', msg, result.lastID);\n    // highlight-start\n    // acknowledge the event\n    callback();\n    // highlight-end\n  });\n\n  if (!socket.recovered) {\n    try {\n      await db.each('SELECT id, content FROM messages WHERE id > ?',\n        [socket.handshake.auth.serverOffset || 0],\n        (_err, row) => {\n          socket.emit('chat message', row.content, row.id);\n        }\n      )\n    } catch (e) {\n      // something went wrong\n    }\n  }\n});\n\n// [...]\n")),(0,r.yg)("p",null,"This way, the UNIQUE constraint on the ",(0,r.yg)("inlineCode",{parentName:"p"},"client_offset")," column prevents the duplication of the message."),(0,r.yg)("admonition",{type:"caution"},(0,r.yg)("p",{parentName:"admonition"},"Do not forget to acknowledge the event, or else the client will keep retrying (up to ",(0,r.yg)("inlineCode",{parentName:"p"},"retries")," times). "),(0,r.yg)("pre",{parentName:"admonition"},(0,r.yg)("code",{parentName:"pre",className:"language-js"},"socket.on('chat message', async (msg, clientOffset, callback) => {\n  // ... and finally\n  callback();\n});\n"))),(0,r.yg)("admonition",{type:"info"},(0,r.yg)("p",{parentName:"admonition"},'Again, the default guarantee ("at most once") might be sufficient for your application, but now you know how it can be made more reliable.')),(0,r.yg)("p",null,"In the next step, we will see how we can scale our application horizontally."),(0,r.yg)("admonition",{type:"info"},(0,r.yg)(i.A,{groupId:"lang",mdxType:"Tabs"},(0,r.yg)(l.A,{value:"cjs",label:"CommonJS",default:!0,attributes:{className:"display-none"},mdxType:"TabItem"},(0,r.yg)("p",{parentName:"admonition"},"You can run this example directly in your browser on:"),(0,r.yg)("ul",{parentName:"admonition"},(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://codesandbox.io/p/sandbox/github/socketio/chat-example/tree/cjs/step8?file=index.js"},"CodeSandbox")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://stackblitz.com/github/socketio/chat-example/tree/cjs/step8?file=index.js"},"StackBlitz"))),"  "),(0,r.yg)(l.A,{value:"mjs",label:"ES modules",attributes:{className:"display-none"},mdxType:"TabItem"},(0,r.yg)("p",{parentName:"admonition"},"You can run this example directly in your browser on:"),(0,r.yg)("ul",{parentName:"admonition"},(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://codesandbox.io/p/sandbox/github/socketio/chat-example/tree/esm/step8?file=index.js"},"CodeSandbox")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://stackblitz.com/github/socketio/chat-example/tree/esm/step8?file=index.js"},"StackBlitz"))),"  "))))}g.isMDXComponent=!0}}]);