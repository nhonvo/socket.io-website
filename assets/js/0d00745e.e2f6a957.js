"use strict";(self.webpackChunksample_website=self.webpackChunksample_website||[]).push([[1880],{5680:(e,t,a)=>{a.d(t,{xA:()=>p,yg:()=>y});var n=a(6540);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=n.createContext({}),d=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},p=function(e){var t=d(e.components);return n.createElement(o.Provider,{value:t},e.children)},g="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),g=d(a),c=r,y=g["".concat(o,".").concat(c)]||g[c]||m[c]||i;return a?n.createElement(y,s(s({ref:t},p),{},{components:a})):n.createElement(y,s({ref:t},p))}));function y(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,s=new Array(i);s[0]=c;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l[g]="string"==typeof e?e:r,s[1]=l;for(var d=2;d<i;d++)s[d]=a[d];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},615:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>s,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>d});var n=a(8168),r=(a(6540),a(5680));const i={title:"Redis Streams adapter",sidebar_position:3,slug:"/redis-streams-adapter/"},s=void 0,l={unversionedId:"categories/Adapters/adapter-redis-streams",id:"categories/Adapters/adapter-redis-streams",title:"Redis Streams adapter",description:"How it works",source:"@site/docs/categories/05-Adapters/adapter-redis-streams.md",sourceDirName:"categories/05-Adapters",slug:"/redis-streams-adapter/",permalink:"/docs/v4/redis-streams-adapter/",draft:!1,editUrl:"https://github.com/socketio/nhonvo.github.io/edit/main/docs/categories/05-Adapters/adapter-redis-streams.md",tags:[],version:"current",lastUpdatedAt:1710497863,formattedLastUpdatedAt:"Mar 15, 2024",sidebarPosition:3,frontMatter:{title:"Redis Streams adapter",sidebar_position:3,slug:"/redis-streams-adapter/"},sidebar:"sidebar",previous:{title:"Redis adapter",permalink:"/docs/v4/redis-adapter/"},next:{title:"MongoDB adapter",permalink:"/docs/v4/mongo-adapter/"}},o={},d=[{value:"How it works",id:"how-it-works",level:2},{value:"Supported features",id:"supported-features",level:2},{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2},{value:"With the <code>redis</code> package",id:"with-the-redis-package",level:3},{value:"With the <code>redis</code> package and a Redis cluster",id:"with-the-redis-package-and-a-redis-cluster",level:3},{value:"With the <code>ioredis</code> package",id:"with-the-ioredis-package",level:3},{value:"With the <code>ioredis</code> package and a Redis cluster",id:"with-the-ioredis-package-and-a-redis-cluster",level:3},{value:"Options",id:"options",level:2},{value:"Common questions",id:"common-questions",level:2},{value:"Do I still need to enable sticky sessions when using the Redis Streams adapter?",id:"do-i-still-need-to-enable-sticky-sessions-when-using-the-redis-streams-adapter",level:3},{value:"What happens when the Redis server is down?",id:"what-happens-when-the-redis-server-is-down",level:3},{value:"Latest releases",id:"latest-releases",level:2}],p={toc:d},g="wrapper";function m(e){let{components:t,...a}=e;return(0,r.yg)(g,(0,n.A)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("h2",{id:"how-it-works"},"How it works"),(0,r.yg)("p",null,"The adapter will use a ",(0,r.yg)("a",{parentName:"p",href:"https://redis.io/docs/data-types/streams/"},"Redis stream")," to forward packets between the Socket.IO servers."),(0,r.yg)("p",null,"The main difference with the existing Redis adapter (which use the ",(0,r.yg)("a",{parentName:"p",href:"https://redis.io/docs/manual/pubsub/"},"Redis Pub/Sub mechanism"),") is that this adapter will properly handle any temporary disconnection to the Redis server and resume the stream without losing any packets."),(0,r.yg)("p",null,"Notes:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"a single stream is used for all namespaces"),(0,r.yg)("li",{parentName:"ul"},"the ",(0,r.yg)("inlineCode",{parentName:"li"},"maxLen")," option allows to limit the size of the stream"),(0,r.yg)("li",{parentName:"ul"},"unlike the adapter based on Redis PUB/SUB mechanism, this adapter will properly handle any temporary disconnection to the Redis server and resume the stream"),(0,r.yg)("li",{parentName:"ul"},"if ",(0,r.yg)("a",{parentName:"li",href:"/docs/v4/connection-state-recovery"},"connection state recovery")," is enabled, the sessions will be stored in Redis as a classic key/value pair")),(0,r.yg)("p",null,"Source code: ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/socketio/socket.io-redis-streams-adapter"},"https://github.com/socketio/socket.io-redis-streams-adapter")),(0,r.yg)("h2",{id:"supported-features"},"Supported features"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Feature"),(0,r.yg)("th",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"th"},"socket.io")," version"),(0,r.yg)("th",{parentName:"tr",align:null},"Support"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Socket management"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"4.0.0")),(0,r.yg)("td",{parentName:"tr",align:null},"\u2705 YES (since version ",(0,r.yg)("inlineCode",{parentName:"td"},"0.1.0"),")")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Inter-server communication"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"4.1.0")),(0,r.yg)("td",{parentName:"tr",align:null},"\u2705 YES (since version ",(0,r.yg)("inlineCode",{parentName:"td"},"0.1.0"),")")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Broadcast with acknowledgements"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("a",{parentName:"td",href:"/docs/v4/changelog/4.5.0"},(0,r.yg)("inlineCode",{parentName:"a"},"4.5.0"))),(0,r.yg)("td",{parentName:"tr",align:null},"\u2705 YES (since version ",(0,r.yg)("inlineCode",{parentName:"td"},"0.1.0"),")")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Connection state recovery"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("a",{parentName:"td",href:"/docs/v4/changelog/4.6.0"},(0,r.yg)("inlineCode",{parentName:"a"},"4.6.0"))),(0,r.yg)("td",{parentName:"tr",align:null},"\u2705 YES (since version ",(0,r.yg)("inlineCode",{parentName:"td"},"0.1.0"),")")))),(0,r.yg)("h2",{id:"installation"},"Installation"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"npm install @socket.io/redis-streams-adapter redis\n")),(0,r.yg)("h2",{id:"usage"},"Usage"),(0,r.yg)("h3",{id:"with-the-redis-package"},"With the ",(0,r.yg)("inlineCode",{parentName:"h3"},"redis")," package"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},'import { createClient } from "redis";\nimport { Server } from "socket.io";\nimport { createAdapter } from "@socket.io/redis-streams-adapter";\n\nconst redisClient = createClient({ url: "redis://localhost:6379" });\n\nawait redisClient.connect();\n\nconst io = new Server({\n  adapter: createAdapter(redisClient)\n});\n\nio.listen(3000);\n')),(0,r.yg)("h3",{id:"with-the-redis-package-and-a-redis-cluster"},"With the ",(0,r.yg)("inlineCode",{parentName:"h3"},"redis")," package and a Redis cluster"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},'import { createCluster } from "redis";\nimport { Server } from "socket.io";\nimport { createAdapter } from "@socket.io/redis-streams-adapter";\n\nconst redisClient = createCluster({\n  rootNodes: [\n    {\n      url: "redis://localhost:7000",\n    },\n    {\n      url: "redis://localhost:7001",\n    },\n    {\n      url: "redis://localhost:7002",\n    },\n  ],\n});\n\nawait redisClient.connect();\n\nconst io = new Server({\n  adapter: createAdapter(redisClient)\n});\n\nio.listen(3000);\n')),(0,r.yg)("h3",{id:"with-the-ioredis-package"},"With the ",(0,r.yg)("inlineCode",{parentName:"h3"},"ioredis")," package"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},'import { Redis } from "ioredis";\nimport { Server } from "socket.io";\nimport { createAdapter } from "@socket.io/redis-streams-adapter";\n\nconst redisClient = new Redis();\n\nconst io = new Server({\n  adapter: createAdapter(redisClient)\n});\n\nio.listen(3000);\n')),(0,r.yg)("h3",{id:"with-the-ioredis-package-and-a-redis-cluster"},"With the ",(0,r.yg)("inlineCode",{parentName:"h3"},"ioredis")," package and a Redis cluster"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},'import { Cluster } from "ioredis";\nimport { Server } from "socket.io";\nimport { createAdapter } from "@socket.io/redis-streams-adapter";\n\nconst redisClient = new Cluster([\n  {\n    host: "localhost",\n    port: 7000,\n  },\n  {\n    host: "localhost",\n    port: 7001,\n  },\n  {\n    host: "localhost",\n    port: 7002,\n  },\n]);\n\nconst io = new Server({\n  adapter: createAdapter(redisClient)\n});\n\nio.listen(3000);\n')),(0,r.yg)("h2",{id:"options"},"Options"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Name"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"),(0,r.yg)("th",{parentName:"tr",align:null},"Default value"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"streamName")),(0,r.yg)("td",{parentName:"tr",align:null},"The name of the Redis stream."),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"socket.io"))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"maxLen")),(0,r.yg)("td",{parentName:"tr",align:null},"The maximum size of the stream. Almost exact trimming (~) is used."),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"10_000"))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"readCount")),(0,r.yg)("td",{parentName:"tr",align:null},"The number of elements to fetch per XREAD call."),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"100"))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"sessionKeyPrefix")),(0,r.yg)("td",{parentName:"tr",align:null},"The prefix of the key used to store the Socket.IO session, when the connection state recovery feature is enabled."),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"sio:session:"))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"heartbeatInterval")),(0,r.yg)("td",{parentName:"tr",align:null},"The number of ms between two heartbeats."),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"5_000"))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"heartbeatTimeout")),(0,r.yg)("td",{parentName:"tr",align:null},"The number of ms without heartbeat before we consider a node down."),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"10_000"))))),(0,r.yg)("h2",{id:"common-questions"},"Common questions"),(0,r.yg)("h3",{id:"do-i-still-need-to-enable-sticky-sessions-when-using-the-redis-streams-adapter"},"Do I still need to enable sticky sessions when using the Redis Streams adapter?"),(0,r.yg)("p",null,"Yes. Failing to do so will result in HTTP 400 responses (you are reaching a server that is not aware of the Socket.IO session)."),(0,r.yg)("p",null,"More information can be found ",(0,r.yg)("a",{parentName:"p",href:"/docs/v4/using-multiple-nodes/#why-is-sticky-session-required"},"here"),"."),(0,r.yg)("h3",{id:"what-happens-when-the-redis-server-is-down"},"What happens when the Redis server is down?"),(0,r.yg)("p",null,"Unlike the classic ",(0,r.yg)("a",{parentName:"p",href:"/docs/v4/redis-adapter/"},"Redis adapter"),", this adapter will properly handle any temporary disconnection to the Redis server and resume the stream without losing any packets."),(0,r.yg)("h2",{id:"latest-releases"},"Latest releases"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Version"),(0,r.yg)("th",{parentName:"tr",align:null},"Release date"),(0,r.yg)("th",{parentName:"tr",align:null},"Release notes"),(0,r.yg)("th",{parentName:"tr",align:null},"Diff"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"0.2.1")),(0,r.yg)("td",{parentName:"tr",align:null},"March 2024"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("a",{parentName:"td",href:"https://github.com/socketio/socket.io-redis-streams-adapter/releases/tag/0.2.1"},"link")),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("a",{parentName:"td",href:"https://github.com/socketio/socket.io-redis-streams-adapter/compare/0.2.0...0.2.1"},(0,r.yg)("inlineCode",{parentName:"a"},"0.2.0...0.2.1")))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"0.2.0")),(0,r.yg)("td",{parentName:"tr",align:null},"February 2024"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("a",{parentName:"td",href:"https://github.com/socketio/socket.io-redis-streams-adapter/releases/tag/0.2.0"},"link")),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("a",{parentName:"td",href:"https://github.com/socketio/socket.io-redis-streams-adapter/compare/0.1.0...0.2.0"},(0,r.yg)("inlineCode",{parentName:"a"},"0.1.0...0.2.0")))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"0.1.0")),(0,r.yg)("td",{parentName:"tr",align:null},"April 2023"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("a",{parentName:"td",href:"https://github.com/socketio/socket.io-redis-streams-adapter/releases/tag/0.1.0"},"link")),(0,r.yg)("td",{parentName:"tr",align:null})))),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"https://github.com/socketio/socket.io-redis-streams-adapter/blob/main/CHANGELOG.md"},"Complete changelog")))}m.isMDXComponent=!0}}]);