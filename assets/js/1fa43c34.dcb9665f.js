"use strict";(self.webpackChunksample_website=self.webpackChunksample_website||[]).push([[130],{5680:(e,t,a)=>{a.d(t,{xA:()=>c,yg:()=>h});var r=a(6540);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=r.createContext({}),u=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},c=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=u(a),m=n,h=p["".concat(s,".").concat(m)]||p[m]||d[m]||o;return a?r.createElement(h,l(l({ref:t},c),{},{components:a})):r.createElement(h,l({ref:t},c))}));function h(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,l=new Array(o);l[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[p]="string"==typeof e?e:n,l[1]=i;for(var u=2;u<o;u++)l[u]=a[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},9365:(e,t,a)=>{a.d(t,{A:()=>l});var r=a(6540),n=a(53);const o={tabItem:"tabItem_Ymn6"};function l(e){let{children:t,hidden:a,className:l}=e;return r.createElement("div",{role:"tabpanel",className:(0,n.A)(o.tabItem,l),hidden:a},t)}},1470:(e,t,a)=>{a.d(t,{A:()=>N});var r=a(8168),n=a(6540),o=a(53),l=a(3104),i=a(6347),s=a(7485),u=a(1682),c=a(9466);function p(e){return function(e){return n.Children.map(e,(e=>{if(!e||(0,n.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:a,attributes:r,default:n}}=e;return{value:t,label:a,attributes:r,default:n}}))}function d(e){const{values:t,children:a}=e;return(0,n.useMemo)((()=>{const e=t??p(a);return function(e){const t=(0,u.X)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function m(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function h(e){let{queryString:t=!1,groupId:a}=e;const r=(0,i.W6)(),o=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,s.aZ)(o),(0,n.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(r.location.search);t.set(o,e),r.replace({...r.location,search:t.toString()})}),[o,r])]}function g(e){const{defaultValue:t,queryString:a=!1,groupId:r}=e,o=d(e),[l,i]=(0,n.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const r=a.find((e=>e.default))??a[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:t,tabValues:o}))),[s,u]=h({queryString:a,groupId:r}),[p,g]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[r,o]=(0,c.Dv)(a);return[r,(0,n.useCallback)((e=>{a&&o.set(e)}),[a,o])]}({groupId:r}),y=(()=>{const e=s??p;return m({value:e,tabValues:o})?e:null})();(0,n.useLayoutEffect)((()=>{y&&i(y)}),[y]);return{selectedValue:l,selectValue:(0,n.useCallback)((e=>{if(!m({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);i(e),u(e),g(e)}),[u,g,o]),tabValues:o}}var y=a(2303);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function b(e){let{className:t,block:a,selectedValue:i,selectValue:s,tabValues:u}=e;const c=[],{blockElementScrollPositionUntilNextRender:p}=(0,l.a_)(),d=e=>{const t=e.currentTarget,a=c.indexOf(t),r=u[a].value;r!==i&&(p(t),s(r))},m=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const a=c.indexOf(e.currentTarget)+1;t=c[a]??c[0];break}case"ArrowLeft":{const a=c.indexOf(e.currentTarget)-1;t=c[a]??c[c.length-1];break}}t?.focus()};return n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.A)("tabs",{"tabs--block":a},t)},u.map((e=>{let{value:t,label:a,attributes:l}=e;return n.createElement("li",(0,r.A)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:e=>c.push(e),onKeyDown:m,onClick:d},l,{className:(0,o.A)("tabs__item",f.tabItem,l?.className,{"tabs__item--active":i===t})}),a??t)})))}function v(e){let{lazy:t,children:a,selectedValue:r}=e;const o=(Array.isArray(a)?a:[a]).filter(Boolean);if(t){const e=o.find((e=>e.props.value===r));return e?(0,n.cloneElement)(e,{className:"margin-top--md"}):null}return n.createElement("div",{className:"margin-top--md"},o.map(((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==r}))))}function w(e){const t=g(e);return n.createElement("div",{className:(0,o.A)("tabs-container",f.tabList)},n.createElement(b,(0,r.A)({},e,t)),n.createElement(v,(0,r.A)({},e,t)))}function N(e){const t=(0,y.A)();return n.createElement(w,(0,r.A)({key:String(t)},e))}},2688:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>c,default:()=>y,frontMatter:()=>u,metadata:()=>p,toc:()=>m});var r=a(8168),n=(a(6540),a(5680)),o=a(1653),l=a(6025),i=a(1470),s=a(9365);const u={title:"Tutorial step #9 - Scaling horizontally",sidebar_label:"Step #9: Scaling horizontally",slug:"step-9"},c="Scaling horizontally",p={unversionedId:"tutorial/scaling-horizontally",id:"tutorial/scaling-horizontally",title:"Tutorial step #9 - Scaling horizontally",description:"Now that our application is resilient to temporary network interruptions, let's see how we can horizontally scale it in order to be able to support thousands of concurrent clients.",source:"@site/docs/tutorial/12-scaling-horizontally.md",sourceDirName:"tutorial",slug:"/tutorial/step-9",permalink:"/docs/v4/tutorial/step-9",draft:!1,editUrl:"https://github.com/socketio/nhonvo.github.io/edit/main/docs/tutorial/12-scaling-horizontally.md",tags:[],version:"current",lastUpdatedAt:1700208595,formattedLastUpdatedAt:"Nov 17, 2023",sidebarPosition:12,frontMatter:{title:"Tutorial step #9 - Scaling horizontally",sidebar_label:"Step #9: Scaling horizontally",slug:"step-9"},sidebar:"tutorialSidebar",previous:{title:"Step #8: Client delivery",permalink:"/docs/v4/tutorial/step-8"},next:{title:"Ending notes",permalink:"/docs/v4/tutorial/ending-notes"}},d={},m=[],h={toc:m},g="wrapper";function y(e){let{components:t,...a}=e;return(0,n.yg)(g,(0,r.A)({},h,a,{components:t,mdxType:"MDXLayout"}),(0,n.yg)("h1",{id:"scaling-horizontally"},"Scaling horizontally"),(0,n.yg)("p",null,"Now that our application is resilient to temporary network interruptions, let's see how we can horizontally scale it in order to be able to support thousands of concurrent clients. "),(0,n.yg)("admonition",{type:"note"},(0,n.yg)("ul",{parentName:"admonition"},(0,n.yg)("li",{parentName:"ul"},'Horizontal scaling (also known as "scaling out") means adding new servers to your infrastructure to cope with new demands'),(0,n.yg)("li",{parentName:"ul"},'Vertical scaling (also known as "scaling up") means adding more resources (processing power, memory, storage, ...) to your existing infrastructure'))),(0,n.yg)("p",null,"First step: let's use all the available cores of the host. By default, Node.js runs your Javascript code in a single thread, which means that even with a 32-core CPU, only one core will be used. Fortunately, the Node.js ",(0,n.yg)("a",{parentName:"p",href:"https://nodejs.org/api/cluster.html#cluster"},(0,n.yg)("inlineCode",{parentName:"a"},"cluster")," module")," provides a convenient way to create one worker thread per core."),(0,n.yg)("p",null,'We will also need a way to forward events between the Socket.IO servers. We call this component an "Adapter".'),(0,n.yg)(o.A,{alt:"The 'hello' event is forwarded to the other servers",sources:{light:(0,l.A)("/images/tutorial/adapter.png"),dark:(0,l.A)("/images/tutorial/adapter-dark.png")},mdxType:"ThemedImage"}),(0,n.yg)("p",null,"So let's install the cluster adapter:"),(0,n.yg)(i.A,{groupId:"pm",mdxType:"Tabs"},(0,n.yg)(s.A,{value:"npm",label:"NPM",default:!0,mdxType:"TabItem"},(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-sh"},"npm install @socket.io/cluster-adapter\n"))),(0,n.yg)(s.A,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-sh"},"yarn add @socket.io/cluster-adapter\n"))),(0,n.yg)(s.A,{value:"pnpm",label:"pnpm",mdxType:"TabItem"},(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-sh"},"pnpm add @socket.io/cluster-adapter\n")))),(0,n.yg)("p",null,"Now we plug it in:"),(0,n.yg)(i.A,{groupId:"lang",mdxType:"Tabs"},(0,n.yg)(s.A,{value:"cjs",label:"CommonJS",default:!0,mdxType:"TabItem"},(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-js",metastring:'title="index.js"',title:'"index.js"'},"const express = require('express');\nconst { createServer } = require('node:http');\nconst { join } = require('node:path');\nconst { Server } = require('socket.io');\nconst sqlite3 = require('sqlite3');\nconst { open } = require('sqlite');\n// highlight-start\nconst { availableParallelism } = require('node:os');\nconst cluster = require('node:cluster');\nconst { createAdapter, setupPrimary } = require('@socket.io/cluster-adapter');\n// highlight-end\n\nif (cluster.isPrimary) {\n  // highlight-start\n  const numCPUs = availableParallelism();\n  // create one worker per available core\n  for (let i = 0; i < numCPUs; i++) {\n    cluster.fork({\n      PORT: 3000 + i\n    });\n  }\n  \n  // set up the adapter on the primary thread\n  return setupPrimary();\n  // highlight-end\n}\n\nasync function main() {\n  const app = express();\n  const server = createServer(app);\n  const io = new Server(server, {\n    connectionStateRecovery: {},\n    // highlight-start\n    // set up the adapter on each worker thread\n    adapter: createAdapter()\n    // highlight-end\n  });\n\n  // [...]\n\n  // highlight-start\n  // each worker will listen on a distinct port\n  const port = process.env.PORT;\n\n  server.listen(port, () => {\n    console.log(`server running at http://localhost:${port}`);\n  });\n  // highlight-end\n}\n\nmain();\n"))),(0,n.yg)(s.A,{value:"mjs",label:"ES modules",mdxType:"TabItem"},(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-js",metastring:'title="index.js"',title:'"index.js"'},"import express from 'express';\nimport { createServer } from 'node:http';\nimport { Server } from 'socket.io';\nimport sqlite3 from 'sqlite3';\nimport { open } from 'sqlite';\n// highlight-start\nimport { availableParallelism } from 'node:os';\nimport cluster from 'node:cluster';\nimport { createAdapter, setupPrimary } from '@socket.io/cluster-adapter';\n// highlight-end\n\nif (cluster.isPrimary) {\n  // highlight-start\n  const numCPUs = availableParallelism();\n  // create one worker per available core\n  for (let i = 0; i < numCPUs; i++) {\n    cluster.fork({\n      PORT: 3000 + i\n    });\n  }\n  \n  // set up the adapter on the primary thread\n  setupPrimary();\n  // highlight-end\n} else {\n  const app = express();\n  const server = createServer(app);\n  const io = new Server(server, {\n    connectionStateRecovery: {},\n    // highlight-start\n    // set up the adapter on each worker thread\n    adapter: createAdapter()\n    // highlight-end\n  });\n\n  // [...]\n\n  // highlight-start\n  // each worker will listen on a distinct port\n  const port = process.env.PORT;\n\n  server.listen(port, () => {\n    console.log(`server running at http://localhost:${port}`);\n  });\n  // highlight-end\n}\n")))),(0,n.yg)("p",null,"That's it! This will spawn one worker thread per CPU available on your machine. Let's see it in action:"),(0,n.yg)("video",{controls:!0,width:"100%"},(0,n.yg)("source",{src:"/videos/tutorial/scaling-up.mp4"})),(0,n.yg)("p",null,"As you can see in the address bar, each browser tab is connected to a different Socket.IO server, and the adapter is simply forwarding the ",(0,n.yg)("inlineCode",{parentName:"p"},"chat message")," events between them."),(0,n.yg)("admonition",{type:"tip"},(0,n.yg)("p",{parentName:"admonition"},"There are currently 5 official adapter implementations:"),(0,n.yg)("ul",{parentName:"admonition"},(0,n.yg)("li",{parentName:"ul"},"the ",(0,n.yg)("a",{parentName:"li",href:"/docs/v4/redis-adapter/"},"Redis adapter")),(0,n.yg)("li",{parentName:"ul"},"the ",(0,n.yg)("a",{parentName:"li",href:"/docs/v4/redis-streams-adapter/"},"Redis Streams adapter")),(0,n.yg)("li",{parentName:"ul"},"the ",(0,n.yg)("a",{parentName:"li",href:"/docs/v4/mongo-adapter/"},"MongoDB adapter")),(0,n.yg)("li",{parentName:"ul"},"the ",(0,n.yg)("a",{parentName:"li",href:"/docs/v4/postgres-adapter/"},"Postgres adapter")),(0,n.yg)("li",{parentName:"ul"},"the ",(0,n.yg)("a",{parentName:"li",href:"/docs/v4/cluster-adapter/"},"Cluster adapter"))),(0,n.yg)("p",{parentName:"admonition"},"So you can choose the one that best suits your needs. However, please note that some implementations do not support the Connection state recovery feature, you can find the compatibility matrix ",(0,n.yg)("a",{parentName:"p",href:"/docs/v4/connection-state-recovery#compatibility-with-existing-adapters"},"here"),".")),(0,n.yg)("admonition",{type:"note"},(0,n.yg)("p",{parentName:"admonition"},'In most cases, you would also need to ensure that all the HTTP requests of a Socket.IO session reach the same server (also known as "sticky session"). This is not needed here though, as each Socket.IO server has its own port.'),(0,n.yg)("p",{parentName:"admonition"},"More information ",(0,n.yg)("a",{parentName:"p",href:"/docs/v4/using-multiple-nodes/"},"here"),".")),(0,n.yg)("p",null,"And that finally completes our chat application! In this tutorial, we have seen how to:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"send an event between the client and the server"),(0,n.yg)("li",{parentName:"ul"},"broadcast an event to all or a subset of connected clients"),(0,n.yg)("li",{parentName:"ul"},"handle temporary disconnections"),(0,n.yg)("li",{parentName:"ul"},"scale up")),(0,n.yg)("p",null,"You should now have a better overview of the features provided by Socket.IO. Now it's your time to build your own realtime application!"),(0,n.yg)("admonition",{type:"info"},(0,n.yg)(i.A,{groupId:"lang",mdxType:"Tabs"},(0,n.yg)(s.A,{value:"cjs",label:"CommonJS",default:!0,attributes:{className:"display-none"},mdxType:"TabItem"},(0,n.yg)("p",{parentName:"admonition"},"You can run this example directly in your browser on:"),(0,n.yg)("ul",{parentName:"admonition"},(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"https://codesandbox.io/p/sandbox/github/socketio/chat-example/tree/cjs/step9?file=index.js"},"CodeSandbox")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"https://stackblitz.com/github/socketio/chat-example/tree/cjs/step9?file=index.js"},"StackBlitz"))),"  "),(0,n.yg)(s.A,{value:"mjs",label:"ES modules",attributes:{className:"display-none"},mdxType:"TabItem"},(0,n.yg)("p",{parentName:"admonition"},"You can run this example directly in your browser on:"),(0,n.yg)("ul",{parentName:"admonition"},(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"https://codesandbox.io/p/sandbox/github/socketio/chat-example/tree/esm/step9?file=index.js"},"CodeSandbox")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"https://stackblitz.com/github/socketio/chat-example/tree/esm/step9?file=index.js"},"StackBlitz")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"https://replit.com/github/socketio/chat-example"},"Repl.it"))),"  "))))}y.isMDXComponent=!0}}]);