"use strict";(self.webpackChunksample_website=self.webpackChunksample_website||[]).push([[193],{5680:(e,n,t)=>{t.d(n,{xA:()=>p,yg:()=>d});var o=t(6540);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,o,a=function(e,n){if(null==e)return{};var t,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=o.createContext({}),l=function(e){var n=o.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=l(e.components);return o.createElement(s.Provider,{value:n},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},g=o.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=l(t),g=a,d=u["".concat(s,".").concat(g)]||u[g]||m[g]||r;return t?o.createElement(d,i(i({ref:n},p),{},{components:t})):o.createElement(d,i({ref:n},p))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,i=new Array(r);i[0]=g;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c[u]="string"==typeof e?e:a,i[1]=c;for(var l=2;l<r;l++)i[l]=t[l];return o.createElement.apply(null,i)}return o.createElement.apply(null,t)}g.displayName="MDXCreateElement"},3827:(e,n,t)=>{t.r(n),t.d(n,{contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>c,toc:()=>s});var o=t(8168),a=(t(6540),t(5680));const r={title:"How to use with React"},i="How to use with React",c={type:"mdx",permalink:"/socket.io-website/how-to/use-with-react",source:"@site/src/pages/how-to/use-with-react.md",title:"How to use with React",description:"This guide shows how to use Socket.IO within a React application.",frontMatter:{title:"How to use with React"}},s=[{value:"Example",id:"example",level:2},{value:"Remarks about the <code>useEffect</code> hook",id:"remarks-about-the-useeffect-hook",level:2},{value:"Cleanup",id:"cleanup",level:3},{value:"Dependencies",id:"dependencies",level:3},{value:"Disconnection",id:"disconnection",level:3},{value:"Important notes",id:"important-notes",level:2},{value:"Hot module reloading",id:"hot-module-reloading",level:3},{value:"Listeners in a child component",id:"listeners-in-a-child-component",level:3},{value:"Temporary disconnections",id:"temporary-disconnections",level:3}],l={toc:s},p="wrapper";function u(e){let{components:n,...t}=e;return(0,a.yg)(p,(0,o.A)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"how-to-use-with-react"},"How to use with React"),(0,a.yg)("p",null,"This guide shows how to use Socket.IO within a ",(0,a.yg)("a",{parentName:"p",href:"https://react.dev"},"React")," application."),(0,a.yg)("h2",{id:"example"},"Example"),(0,a.yg)("p",null,"Structure:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},"src\n\u251c\u2500\u2500 App.js\n\u251c\u2500\u2500 components\n\u2502   \u251c\u2500\u2500 ConnectionManager.js\n\u2502   \u251c\u2500\u2500 ConnectionState.js\n\u2502   \u251c\u2500\u2500 Events.js\n\u2502   \u2514\u2500\u2500 MyForm.js\n\u2514\u2500\u2500 socket.js\n")),(0,a.yg)("p",null,"The Socket.IO client is initialized in the ",(0,a.yg)("inlineCode",{parentName:"p"},"src/socket.js")," file:"),(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},"src/socket.js")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},"import { io } from 'socket.io-client';\n\n// \"undefined\" means the URL will be computed from the `window.location` object\nconst URL = process.env.NODE_ENV === 'production' ? undefined : 'http://localhost:4000';\n\nexport const socket = io(URL);\n")),(0,a.yg)("admonition",{type:"tip"},(0,a.yg)("p",{parentName:"admonition"},"By default, the Socket.IO client opens a connection to the server right away. You can prevent this behavior with the ",(0,a.yg)("a",{parentName:"p",href:"/docs/v4/client-options/#autoconnect"},(0,a.yg)("inlineCode",{parentName:"a"},"autoConnect"))," option:"),(0,a.yg)("pre",{parentName:"admonition"},(0,a.yg)("code",{parentName:"pre",className:"language-js"},"export const socket = io(URL, {\n  autoConnect: false\n});\n")),(0,a.yg)("p",{parentName:"admonition"},"In that case, you will need to call ",(0,a.yg)("inlineCode",{parentName:"p"},"socket.connect()")," to make the Socket.IO client connect. This can be useful for example when the user must provide some kind of credentials before connecting.")),(0,a.yg)("admonition",{type:"info"},(0,a.yg)("p",{parentName:"admonition"},"During development, you need to enable CORS on your server:"),(0,a.yg)("pre",{parentName:"admonition"},(0,a.yg)("code",{parentName:"pre",className:"language-js"},'const io = new Server({\n  cors: {\n    origin: "http://localhost:3000"\n  }\n});\n\nio.listen(4000);\n')),(0,a.yg)("p",{parentName:"admonition"},"Reference: ",(0,a.yg)("a",{parentName:"p",href:"/docs/v4/handling-cors/"},"Handling CORS"))),(0,a.yg)("p",null,"The events listeners are then registered in the ",(0,a.yg)("inlineCode",{parentName:"p"},"App")," component, which stores the state and pass it down to its child components via props."),(0,a.yg)("p",null,"See also: ",(0,a.yg)("a",{parentName:"p",href:"https://react.dev/learn/sharing-state-between-components"},"https://react.dev/learn/sharing-state-between-components")),(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},"src/App.js")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},"import React, { useState, useEffect } from 'react';\nimport { socket } from './socket';\nimport { ConnectionState } from './components/ConnectionState';\nimport { ConnectionManager } from './components/ConnectionManager';\nimport { Events } from \"./components/Events\";\nimport { MyForm } from './components/MyForm';\n\nexport default function App() {\n  const [isConnected, setIsConnected] = useState(socket.connected);\n  const [fooEvents, setFooEvents] = useState([]);\n\n  useEffect(() => {\n    function onConnect() {\n      setIsConnected(true);\n    }\n\n    function onDisconnect() {\n      setIsConnected(false);\n    }\n\n    function onFooEvent(value) {\n      setFooEvents(previous => [...previous, value]);\n    }\n\n    socket.on('connect', onConnect);\n    socket.on('disconnect', onDisconnect);\n    socket.on('foo', onFooEvent);\n\n    return () => {\n      socket.off('connect', onConnect);\n      socket.off('disconnect', onDisconnect);\n      socket.off('foo', onFooEvent);\n    };\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <ConnectionState isConnected={ isConnected } />\n      <Events events={ fooEvents } />\n      <ConnectionManager />\n      <MyForm />\n    </div>\n  );\n}\n")),(0,a.yg)("admonition",{type:"tip"},(0,a.yg)("p",{parentName:"admonition"},"A few remarks about the usage of the ",(0,a.yg)("a",{parentName:"p",href:"https://react.dev/reference/react/useEffect"},(0,a.yg)("inlineCode",{parentName:"a"},"useEffect"))," hook can be found ",(0,a.yg)("a",{parentName:"p",href:"#remarks-about-the-useeffect-hook"},"below"),".")),(0,a.yg)("p",null,"The child components can then use the state and the ",(0,a.yg)("inlineCode",{parentName:"p"},"socket")," object like this:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"src/components/ConnectionState.js"))),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},"import React from 'react';\n\nexport function ConnectionState({ isConnected }) {\n  return <p>State: { '' + isConnected }</p>;\n}\n")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"src/components/Events.js"))),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},"import React from 'react';\n\nexport function Events({ events }) {\n  return (\n    <ul>\n    {\n      events.map((event, index) =>\n        <li key={ index }>{ event }</li>\n      )\n    }\n    </ul>\n  );\n}\n")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"src/components/ConnectionManager.js"))),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},"import React from 'react';\nimport { socket } from '../socket';\n\nexport function ConnectionManager() {\n  function connect() {\n    socket.connect();\n  }\n\n  function disconnect() {\n    socket.disconnect();\n  }\n\n  return (\n    <>\n      <button onClick={ connect }>Connect</button>\n      <button onClick={ disconnect }>Disconnect</button>\n    </>\n  );\n}\n")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"src/components/MyForm.js"))),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},"import React, { useState } from 'react';\nimport { socket } from '../socket';\n\nexport function MyForm() {\n  const [value, setValue] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  function onSubmit(event) {\n    event.preventDefault();\n    setIsLoading(true);\n\n    socket.timeout(5000).emit('create-something', value, () => {\n      setIsLoading(false);\n    });\n  }\n\n  return (\n    <form onSubmit={ onSubmit }>\n      <input onChange={ e => setValue(e.target.value) } />\n\n      <button type=\"submit\" disabled={ isLoading }>Submit</button>\n    </form>\n  );\n}\n")),(0,a.yg)("h2",{id:"remarks-about-the-useeffect-hook"},"Remarks about the ",(0,a.yg)("inlineCode",{parentName:"h2"},"useEffect")," hook"),(0,a.yg)("h3",{id:"cleanup"},"Cleanup"),(0,a.yg)("p",null,"Any event listeners registered in the setup function must be removed in the cleanup callback in order to prevent duplicate event registrations."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},"useEffect(() => {\n  function onFooEvent(value) {\n    // ...\n  }\n\n  socket.on('foo', onFooEvent);\n\n  return () => {\n    // BAD: missing event registration cleanup\n  };\n}, []);\n")),(0,a.yg)("p",null,"Also, the event listeners are named functions, so calling ",(0,a.yg)("inlineCode",{parentName:"p"},"socket.off()")," only removes this specific listener:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},"useEffect(() => {\n  socket.on('foo', (value) => {\n    // ...\n  });\n\n  return () => {\n    // BAD: this will remove all listeners for the 'foo' event, which may\n    // include the ones registered in another component\n    socket.off('foo');\n  };\n}, []);\n")),(0,a.yg)("h3",{id:"dependencies"},"Dependencies"),(0,a.yg)("p",null,"The ",(0,a.yg)("inlineCode",{parentName:"p"},"onFooEvent")," function could also have been written like this:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},"useEffect(() => {\n  function onFooEvent(value) {\n    setFooEvents(fooEvents.concat(value));\n  }\n\n  socket.on('foo', onFooEvent);\n\n  return () => {\n    socket.off('foo', onFooEvent);\n  };\n}, [fooEvents]);\n")),(0,a.yg)("p",null,"This works too, but please note that in that case, the ",(0,a.yg)("inlineCode",{parentName:"p"},"onFooEvent")," listener will be unregistered then registered again on each render."),(0,a.yg)("h3",{id:"disconnection"},"Disconnection"),(0,a.yg)("p",null,"If you need to close the Socket.IO client when your component is unmounted (for example, if the connection is only needed in a specific part of your application), you should:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"ensure ",(0,a.yg)("inlineCode",{parentName:"li"},"socket.connect()")," is called in the setup phase:")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},"useEffect(() => {\n  // no-op if the socket is already connected\n  socket.connect();\n\n  return () => {\n    socket.disconnect();\n  };\n}, []);\n")),(0,a.yg)("admonition",{type:"info"},(0,a.yg)("p",{parentName:"admonition"},"In ",(0,a.yg)("a",{parentName:"p",href:"https://react.dev/reference/react/StrictMode"},"Strict Mode"),", every Effect is run twice in order to catch bugs during development, so you will see:"),(0,a.yg)("ul",{parentName:"admonition"},(0,a.yg)("li",{parentName:"ul"},"setup: ",(0,a.yg)("inlineCode",{parentName:"li"},"socket.connect()")),(0,a.yg)("li",{parentName:"ul"},"cleanup: ",(0,a.yg)("inlineCode",{parentName:"li"},"socket.disconnect()")),(0,a.yg)("li",{parentName:"ul"},"setup: ",(0,a.yg)("inlineCode",{parentName:"li"},"socket.connect()")))),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"have no dependency for this Effect in order to prevent a reconnection on each render:")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},"useEffect(() => {\n  socket.connect();\n\n  function onFooEvent(value) {\n    setFooEvents(fooEvents.concat(value));\n  }\n\n  socket.on('foo', onFooEvent);\n\n  return () => {\n    socket.off('foo', onFooEvent);\n    // BAD: the Socket.IO client will reconnect every time the fooEvents array\n    // is updated\n    socket.disconnect();\n  };\n}, [fooEvents]);\n")),(0,a.yg)("p",null,"You could have two Effects instead:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},"import React, { useState, useEffect } from 'react';\nimport { socket } from './socket';\n\nfunction App() {\n  const [fooEvents, setFooEvents] = useState([]);\n\n  useEffect(() => {\n    // no-op if the socket is already connected\n    socket.connect();\n\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n\n  useEffect(() => {\n    function onFooEvent(value) {\n      setFooEvents(fooEvents.concat(value));\n    }\n\n    socket.on('foo', onFooEvent);\n\n    return () => {\n      socket.off('foo', onFooEvent);\n    };\n  }, [fooEvents]);\n\n  // ...\n}\n")),(0,a.yg)("h2",{id:"important-notes"},"Important notes"),(0,a.yg)("admonition",{type:"info"},(0,a.yg)("p",{parentName:"admonition"},"These remarks are valid for any front-end framework.")),(0,a.yg)("h3",{id:"hot-module-reloading"},"Hot module reloading"),(0,a.yg)("p",null,"The hot reloading of a file that contains the initialization of a Socket.IO client (i.e. the ",(0,a.yg)("inlineCode",{parentName:"p"},"src/socket.js")," file in the example above) might leave the previous Socket.IO connection alive, which means that:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"you might have multiple connections on your Socket.IO server"),(0,a.yg)("li",{parentName:"ul"},"you might receive events from the previous connection")),(0,a.yg)("p",null,"The only known workaround is to do a ",(0,a.yg)("strong",{parentName:"p"},"full-page reload")," when this specific file is updated (or disable hot reloading altogether, but that might be a bit extreme)."),(0,a.yg)("p",null,"Reference: ",(0,a.yg)("a",{parentName:"p",href:"https://webpack.js.org/concepts/hot-module-replacement/"},"https://webpack.js.org/concepts/hot-module-replacement/")),(0,a.yg)("h3",{id:"listeners-in-a-child-component"},"Listeners in a child component"),(0,a.yg)("p",null,"We strongly advise against registering event listeners in your child components, because it ties the state of the UI with the time of reception of the events: if the component is not mounted, then some messages might be missed."),(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},"src/components/MyComponent.js")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},"import React from 'react';\n\nexport default function MyComponent() {\n  const [fooEvents, setFooEvents] = useState([]);\n\n  useEffect(() => {\n    function onFooEvent(value) {\n      setFooEvents(previous => [...previous, value]);\n    }\n\n    // BAD: this ties the state of the UI with the time of reception of the\n    // 'foo' events\n    socket.on('foo', onFooEvent);\n\n    return () => {\n      socket.off('foo', onFooEvent);\n    };\n  }, []);\n\n  // ...\n}\n")),(0,a.yg)("h3",{id:"temporary-disconnections"},"Temporary disconnections"),(0,a.yg)("p",null,"While very powerful, WebSocket connections are not always up and running:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"anything between the user and the Socket.IO server may encounter a temporary failure or be restarted"),(0,a.yg)("li",{parentName:"ul"},"the server itself may be killed as part of an autoscaling policy"),(0,a.yg)("li",{parentName:"ul"},"the user may lose connection or switch from Wi-Fi to 4G, in case of a mobile browser")),(0,a.yg)("p",null,"Which means you will need to properly handle the temporary disconnections, in order to provide a great experience to your users."),(0,a.yg)("p",null,"The good news is that Socket.IO includes some features that can help you. Please check:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"/docs/v4/connection-state-recovery"},"Connection state recovery")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"/docs/v4/delivery-guarantees"},"Delivery guarantees"))),(0,a.yg)("p",null,(0,a.yg)("a",{parentName:"p",href:"/get-started/"},"Back to the list of examples")))}u.isMDXComponent=!0}}]);