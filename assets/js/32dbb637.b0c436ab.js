"use strict";(self.webpackChunksample_website=self.webpackChunksample_website||[]).push([[7676],{5680:(e,t,n)=>{n.d(t,{xA:()=>l,yg:()=>u});var i=n(6540);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,o=function(e,t){if(null==e)return{};var n,i,o={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=i.createContext({}),c=function(e){var t=i.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},l=function(e){var t=c(e.components);return i.createElement(p.Provider,{value:t},e.children)},g="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),g=c(n),d=o,u=g["".concat(p,".").concat(d)]||g[d]||h[d]||a;return n?i.createElement(u,r(r({ref:t},l),{},{components:n})):i.createElement(u,r({ref:t},l))}));function u(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,r=new Array(a);r[0]=d;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[g]="string"==typeof e?e:o,r[1]=s;for(var c=2;c<a;c++)r[c]=n[c];return i.createElement.apply(null,r)}return i.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7403:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>r,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var i=n(8168),o=(n(6540),n(5680));const a={title:"Internals overview",sidebar_position:1,slug:"/internals/"},r=void 0,s={unversionedId:"categories/Advanced/internals",id:"version-2.x/categories/Advanced/internals",title:"Internals overview",description:"Dependency graph",source:"@site/versioned_docs/version-2.x/categories/04-Advanced/internals.md",sourceDirName:"categories/04-Advanced",slug:"/internals/",permalink:"/docs/v2/internals/",draft:!1,editUrl:"https://github.com/socketio/socket.io-website/edit/main/versioned_docs/version-2.x/categories/04-Advanced/internals.md",tags:[],version:"2.x",lastUpdatedAt:1631601618,formattedLastUpdatedAt:"Sep 14, 2021",sidebarPosition:1,frontMatter:{title:"Internals overview",sidebar_position:1,slug:"/internals/"},sidebar:"version-2.x/sidebar",previous:{title:"Initialization",permalink:"/docs/v2/client-initialization/"},next:{title:"Migrating from 0.9",permalink:"/docs/v2/migrating-from-0-9/"}},p={},c=[{value:"Dependency graph",id:"dependency-graph",level:2},{value:"engine.io-parser",id:"engineio-parser",level:3},{value:"engine.io",id:"engineio",level:3},{value:"engine.io-client",id:"engineio-client",level:3},{value:"socket.io-adapter",id:"socketio-adapter",level:3},{value:"socket.io-redis",id:"socketio-redis",level:3},{value:"socket.io-parser",id:"socketio-parser",level:3},{value:"socket.io",id:"socketio",level:3},{value:"socket.io-client",id:"socketio-client",level:3},{value:"Under the hood",id:"under-the-hood",level:2},{value:"Connection",id:"connection",level:3},{value:"Upgrade",id:"upgrade",level:3}],l={toc:c},g="wrapper";function h(e){let{components:t,...n}=e;return(0,o.yg)(g,(0,i.A)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.yg)("h2",{id:"dependency-graph"},"Dependency graph"),(0,o.yg)("p",null,"The Socket.IO codebase is split across several repositories:"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("a",{parentName:"li",href:"https://github.com/socketio/socket.io"},"https://github.com/socketio/socket.io")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("a",{parentName:"li",href:"https://github.com/socketio/socket.io-client"},"https://github.com/socketio/socket.io-client")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("a",{parentName:"li",href:"https://github.com/socketio/socket.io-parser"},"https://github.com/socketio/socket.io-parser")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("a",{parentName:"li",href:"https://github.com/socketio/socket.io-adapter"},"https://github.com/socketio/socket.io-adapter")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("a",{parentName:"li",href:"https://github.com/socketio/socket.io-redis"},"https://github.com/socketio/socket.io-redis")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("a",{parentName:"li",href:"https://github.com/socketio/engine.io"},"https://github.com/socketio/engine.io")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("a",{parentName:"li",href:"https://github.com/socketio/engine.io-client"},"https://github.com/socketio/engine.io-client")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("a",{parentName:"li",href:"https://github.com/socketio/engine.io-parser"},"https://github.com/socketio/engine.io-parser"))),(0,o.yg)("p",null,"The following diagram displays the relationships between each project:"),(0,o.yg)("img",{src:"/images/dependencies.jpg",alt:"Socket.IO dependency graph"}),(0,o.yg)("p",null,"Each project brings its own set of features:"),(0,o.yg)("h3",{id:"engineio-parser"},"engine.io-parser"),(0,o.yg)("p",null,"This is the JavaScript parser for the engine.io protocol encoding, shared by both ",(0,o.yg)("a",{parentName:"p",href:"https://github.com/socketio/engine.io-client"},"engine.io-client")," and ",(0,o.yg)("a",{parentName:"p",href:"https://github.com/socketio/engine.io"},"engine.io"),"."),(0,o.yg)("p",null,"The specification for the protocol can be found here: ",(0,o.yg)("a",{parentName:"p",href:"https://github.com/socketio/engine.io-protocol"},"https://github.com/socketio/engine.io-protocol")),(0,o.yg)("h3",{id:"engineio"},"engine.io"),(0,o.yg)("p",null,"Engine.IO is the implementation of transport-based cross-browser/cross-device bi-directional communication layer for Socket.IO."),(0,o.yg)("p",null,"Its main feature is the ability to swap transports on the fly. A connection (initiated by an ",(0,o.yg)("a",{parentName:"p",href:"https://github.com/socketio/engine.io-client"},"engine.io-client")," counterpart) starts with XHR polling, but can then switch to WebSocket if possible."),(0,o.yg)("p",null,"It uses the ",(0,o.yg)("a",{parentName:"p",href:"https://github.com/socketio/engine.io-parser"},"engine.io-parser")," to encode/decode packets."),(0,o.yg)("h3",{id:"engineio-client"},"engine.io-client"),(0,o.yg)("p",null,"This is the client for ",(0,o.yg)("a",{parentName:"p",href:"https://github.com/socketio/engine.io"},"Engine.IO"),", the implementation of transport-based cross-browser/cross-device bi-directional communication layer for ",(0,o.yg)("a",{parentName:"p",href:"https://github.com/socketio/socket.io"},"Socket.IO"),"."),(0,o.yg)("p",null,"It runs in both the browser (including HTML5 ",(0,o.yg)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API"},"WebWorker"),") and Node.js."),(0,o.yg)("p",null,"It uses the ",(0,o.yg)("a",{parentName:"p",href:"https://github.com/socketio/engine.io-parser"},"engine.io-parser")," to encode/decode packets."),(0,o.yg)("h3",{id:"socketio-adapter"},"socket.io-adapter"),(0,o.yg)("p",null,"This is the default Socket.IO in-memory adapter class."),(0,o.yg)("p",null,"This module is not intended for end-user usage, but can be used as an interface to inherit from other adapters you might want to build, like ",(0,o.yg)("a",{parentName:"p",href:"https://github.com/socketio/socket.io-redis"},"socket.io-redis"),"."),(0,o.yg)("h3",{id:"socketio-redis"},"socket.io-redis"),(0,o.yg)("p",null,"This is the adapter using the Redis ",(0,o.yg)("a",{parentName:"p",href:"https://redis.io/topics/pubsub"},"Pub/Sub")," mechanism to broadcast messages between multiple nodes."),(0,o.yg)("h3",{id:"socketio-parser"},"socket.io-parser"),(0,o.yg)("p",null,"A socket.io encoder and decoder written in JavaScript complying with version 3 of ",(0,o.yg)("a",{parentName:"p",href:"https://github.com/socketio/socket.io-protocol"},"socket.io-protocol"),". Used by ",(0,o.yg)("a",{parentName:"p",href:"https://github.com/socketio/socket.io"},"socket.io")," and ",(0,o.yg)("a",{parentName:"p",href:"https://github.com/socketio/socket.io-client"},"socket.io-client"),"."),(0,o.yg)("h3",{id:"socketio"},"socket.io"),(0,o.yg)("p",null,"Socket.IO brings some ",(0,o.yg)("em",{parentName:"p"},"syntactic sugar"),' over the Engine.IO "raw" API. It also brings two new concepts, ',(0,o.yg)("inlineCode",{parentName:"p"},"Rooms")," and ",(0,o.yg)("inlineCode",{parentName:"p"},"Namespaces"),", which introduce a separation of concern between communication channels. Please see the associated documentation ",(0,o.yg)("a",{parentName:"p",href:"/docs/v2/rooms/"},"there"),"."),(0,o.yg)("p",null,"By default, it exposes a browser build of the client at ",(0,o.yg)("inlineCode",{parentName:"p"},"/socket.io/socket.io.js"),"."),(0,o.yg)("p",null,"It uses the ",(0,o.yg)("a",{parentName:"p",href:"https://github.com/socketio/socket.io-parser"},"socket.io-parser")," to encode/decode packets."),(0,o.yg)("h3",{id:"socketio-client"},"socket.io-client"),(0,o.yg)("p",null,"This is the client for ",(0,o.yg)("a",{parentName:"p",href:"https://github.com/socketio/socket.io"},"Socket.IO"),". It relies on ",(0,o.yg)("a",{parentName:"p",href:"https://github.com/socketio/engine.io-client"},"engine.io-client"),", which manages the transport swapping and the disconnection detection."),(0,o.yg)("p",null,"It handles reconnection automatically, in case the underlying connection is severed."),(0,o.yg)("p",null,"It uses the ",(0,o.yg)("a",{parentName:"p",href:"https://github.com/socketio/socket.io-parser"},"socket.io-parser")," to encode/decode packets."),(0,o.yg)("h2",{id:"under-the-hood"},"Under the hood"),(0,o.yg)("h3",{id:"connection"},"Connection"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},"const client = io('https://myhost.com');\n")),(0,o.yg)("p",null,"The following steps take place:"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("p",{parentName:"li"},"on the client-side, a new ",(0,o.yg)("inlineCode",{parentName:"p"},"engine.io-client")," instance is created")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("p",{parentName:"li"},"the ",(0,o.yg)("inlineCode",{parentName:"p"},"engine.io-client")," instance tries to establish a ",(0,o.yg)("inlineCode",{parentName:"p"},"polling")," transport"))),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-sh"},'GET https://myhost.com/socket.io/?EIO=3&transport=polling&t=ML4jUwU&b64=1\n\nwith:\n\n  "EIO=3"               # the current version of the Engine.IO protocol\n  "transport=polling"   # the transport being established\n  "t=ML4jUwU&b64=1"     # a hashed timestamp for cache-busting\n\n')),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"the ",(0,o.yg)("inlineCode",{parentName:"li"},"engine.io")," server responds with:")),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},'{\n  "type": "open",\n  "data": {\n    "sid": "36Yib8-rSutGQYLfAAAD",  // the unique session id\n    "upgrades": ["websocket"],      // the list of possible transport upgrades\n    "pingInterval": 25000,          // the 1st parameter for the heartbeat mechanism\n    "pingTimeout": 5000             // the 2nd parameter for the heartbeat mechanism\n  }\n}\n')),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"the content is encoded by the ",(0,o.yg)("inlineCode",{parentName:"li"},"engine.io-parser")," as:")),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-sh"},'\'96:0{"sid":"hLOEJXN07AE0GQCNAAAB","upgrades":["websocket"],"pingInterval":25000,"pingTimeout":5000}2:40\'\n\nwith:\n\n  "96"  # the length of the first message\n  ":"   # a separator between length and content\n  "0"   # the "open" message type\n  \'{"sid":"hLOEJXN07AE0GQCNAAAB","upgrades":["websocket"],"pingInterval":25000,"pingTimeout":5000}\' # the JSON-encoded handshake data\n  "2"   # the length of the second message\n  ":"   # a separator between length and content\n  "4"   # the "message" message type\n  "0"   # the "open" message type in Socket.IO protocol\n\n')),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("p",{parentName:"li"},"the content is then decoded by the ",(0,o.yg)("inlineCode",{parentName:"p"},"engine.io-parser")," on the client-side")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("p",{parentName:"li"},"an ",(0,o.yg)("inlineCode",{parentName:"p"},"open")," event is emitted at the ",(0,o.yg)("inlineCode",{parentName:"p"},"engine.io-client")," level")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("p",{parentName:"li"},"a ",(0,o.yg)("inlineCode",{parentName:"p"},"connect")," event is emitted at the ",(0,o.yg)("inlineCode",{parentName:"p"},"socket.io-client")," level"))),(0,o.yg)("h3",{id:"upgrade"},"Upgrade"),(0,o.yg)("p",null,"Once all the buffers of the existing transport (XHR polling) are flushed, an upgrade gets tested on the side by sending a probe."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-sh"},'GET wss://myhost.com/socket.io/?EIO=3&transport=websocket&sid=36Yib8-rSutGQYLfAAAD\n\nwith:\n\n  "EIO=3"                     # again, the current version of the Engine.IO protocol\n  "transport=websocket"       # the new transport being probed\n  "sid=36Yib8-rSutGQYLfAAAD"  # the unique session id\n\n')),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("p",{parentName:"li"},'a "ping" packet is sent by the client in a WebSocket frame, encoded as ',(0,o.yg)("inlineCode",{parentName:"p"},"2probe")," by the ",(0,o.yg)("inlineCode",{parentName:"p"},"engine.io-parser"),", with ",(0,o.yg)("inlineCode",{parentName:"p"},"2"),' being the "ping" message type.')),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("p",{parentName:"li"},'the server responds with a "pong" packet, encoded as ',(0,o.yg)("inlineCode",{parentName:"p"},"3probe"),", with ",(0,o.yg)("inlineCode",{parentName:"p"},"3"),' being the "pong" message type.')),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("p",{parentName:"li"},'upon receiving the "pong" packet, the upgrade is considered complete and all following messages go through the new transport.'))))}h.isMDXComponent=!0}}]);