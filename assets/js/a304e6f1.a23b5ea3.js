"use strict";(self.webpackChunksample_website=self.webpackChunksample_website||[]).push([[9177],{5680:(e,t,n)=>{n.d(t,{xA:()=>m,yg:()=>g});var r=n(6540);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},m=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,m=a(e,["components","mdxType","originalType","parentName"]),p=c(n),u=i,g=p["".concat(l,".").concat(u)]||p[u]||d[u]||o;return n?r.createElement(g,s(s({ref:t},m),{},{components:n})):r.createElement(g,s({ref:t},m))}));function g(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,s=new Array(o);s[0]=u;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a[p]="string"==typeof e?e:i,s[1]=a;for(var c=2;c<o;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5499:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>a,toc:()=>c});var r=n(8168),i=(n(6540),n(5680));const o={title:"Emit cheatsheet",sidebar_position:5,slug:"/emit-cheatsheet/"},s=void 0,a={unversionedId:"categories/Events/emit-cheatsheet",id:"version-3.x/categories/Events/emit-cheatsheet",title:"Emit cheatsheet",description:"Server-side",source:"@site/versioned_docs/version-3.x/categories/04-Events/emit-cheatsheet.md",sourceDirName:"categories/04-Events",slug:"/emit-cheatsheet/",permalink:"/docs/v3/emit-cheatsheet/",draft:!1,editUrl:"https://github.com/socketio/nhonvo.github.io/edit/main/versioned_docs/version-3.x/categories/04-Events/emit-cheatsheet.md",tags:[],version:"3.x",lastUpdatedAt:1631601618,formattedLastUpdatedAt:"Sep 14, 2021",sidebarPosition:5,frontMatter:{title:"Emit cheatsheet",sidebar_position:5,slug:"/emit-cheatsheet/"},sidebar:"version-3.x/sidebar",previous:{title:"Rooms",permalink:"/docs/v3/rooms/"},next:{title:"Namespaces",permalink:"/docs/v3/namespaces/"}},l={},c=[{value:"Server-side",id:"server-side",level:2},{value:"Client-side",id:"client-side",level:2},{value:"Reserved events",id:"reserved-events",level:2}],m={toc:c},p="wrapper";function d(e){let{components:t,...n}=e;return(0,i.yg)(p,(0,r.A)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.yg)("h2",{id:"server-side"},"Server-side"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-js"},'io.on("connection", (socket) => {\n\n  // basic emit\n  socket.emit(/* ... */);\n\n  // to all clients in the current namespace except the sender\n  socket.broadcast.emit(/* ... */);\n\n  // to all clients in room1 except the sender\n  socket.to("room1").emit(/* ... */);\n\n  // to all clients in room1 and/or room2 except the sender\n  socket.to("room1").to("room2").emit(/* ... */);\n\n  // to all clients in room1\n  io.in("room1").emit(/* ... */);\n\n  // to all clients in namespace "myNamespace"\n  io.of("myNamespace").emit(/* ... */);\n\n  // to all clients in room1 in namespace "myNamespace"\n  io.of("myNamespace").to("room1").emit(/* ... */);\n\n  // to individual socketid (private message)\n  io.to(socketId).emit(/* ... */);\n\n  // to all clients on this node (when using multiple nodes)\n  io.local.emit(/* ... */);\n\n  // to all connected clients\n  io.emit(/* ... */);\n\n  // WARNING: `socket.to(socket.id).emit()` will NOT work, as it will send to everyone in the room\n  // named `socket.id` but the sender. Please use the classic `socket.emit()` instead.\n\n  // with acknowledgement\n  socket.emit("question", (answer) => {\n    // ...\n  });\n\n  // without compression\n  socket.compress(false).emit(/* ... */);\n\n  // a message that might be dropped if the low-level transport is not writable\n  socket.volatile.emit(/* ... */);\n\n});\n')),(0,i.yg)("h2",{id:"client-side"},"Client-side"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-js"},'// basic emit\nsocket.emit(/* ... */);\n\n// with acknowledgement\nsocket.emit("question", (answer) => {\n  // ...\n});\n\n// without compression\nsocket.compress(false).emit(/* ... */);\n\n// a message that might be dropped if the low-level transport is not writable\nsocket.volatile.emit(/* ... */);\n')),(0,i.yg)("h2",{id:"reserved-events"},"Reserved events"),(0,i.yg)("p",null,"On each side, the following events are reserved and should not be used as event names by your application:"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"connect")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"connect_error")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"disconnect")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"disconnecting")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"newListener")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"removeListener"))),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-js"},'// BAD, will throw an error\nsocket.emit("disconnecting");\n')))}d.isMDXComponent=!0}}]);