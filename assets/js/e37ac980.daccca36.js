"use strict";(self.webpackChunksample_website=self.webpackChunksample_website||[]).push([[2007],{5680:(e,t,n)=>{n.d(t,{xA:()=>d,yg:()=>u});var a=n(6540);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},d=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},p="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),p=c(n),m=o,u=p["".concat(l,".").concat(m)]||p[m]||g[m]||r;return n?a.createElement(u,s(s({ref:t},d),{},{components:n})):a.createElement(u,s({ref:t},d))}));function u(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,s=new Array(r);s[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[p]="string"==typeof e?e:o,s[1]=i;for(var c=2;c<r;c++)s[c]=n[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9311:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>c,toc:()=>p});var a=n(8168),o=(n(6540),n(5680)),r=n(1653),s=n(6025);const i={title:"Broadcasting events",sidebar_position:3,slug:"/broadcasting-events/"},l=void 0,c={unversionedId:"categories/Events/broadcasting-events",id:"categories/Events/broadcasting-events",title:"Broadcasting events",description:"Socket.IO makes it easy to send events to all the connected clients.",source:"@site/docs/categories/04-Events/broadcasting-events.md",sourceDirName:"categories/04-Events",slug:"/broadcasting-events/",permalink:"/docs/v4/broadcasting-events/",draft:!1,editUrl:"https://github.com/socketio/socket.io-website/edit/main/docs/categories/04-Events/broadcasting-events.md",tags:[],version:"current",lastUpdatedAt:1706249166,formattedLastUpdatedAt:"Jan 26, 2024",sidebarPosition:3,frontMatter:{title:"Broadcasting events",sidebar_position:3,slug:"/broadcasting-events/"},sidebar:"sidebar",previous:{title:"Listening to events",permalink:"/docs/v4/listening-to-events/"},next:{title:"Rooms",permalink:"/docs/v4/rooms/"}},d={},p=[{value:"To all connected clients",id:"to-all-connected-clients",level:2},{value:"To all connected clients except the sender",id:"to-all-connected-clients-except-the-sender",level:2},{value:"With acknowledgements",id:"with-acknowledgements",level:2},{value:"With multiple Socket.IO servers",id:"with-multiple-socketio-servers",level:2}],g={toc:p},m="wrapper";function u(e){let{components:t,...n}=e;return(0,o.yg)(m,(0,a.A)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,o.yg)("p",null,"Socket.IO makes it easy to send events to all the connected clients."),(0,o.yg)("admonition",{type:"info"},(0,o.yg)("p",{parentName:"admonition"},"Please note that broadcasting is a ",(0,o.yg)("strong",{parentName:"p"},"server-only")," feature.")),(0,o.yg)("h2",{id:"to-all-connected-clients"},"To all connected clients"),(0,o.yg)(r.A,{alt:"Broadcasting to all connected clients",sources:{light:(0,s.A)("/images/broadcasting.png"),dark:(0,s.A)("/images/broadcasting-dark.png")},mdxType:"ThemedImage"}),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},'io.emit("hello", "world");\n')),(0,o.yg)("admonition",{type:"caution"},(0,o.yg)("p",{parentName:"admonition"},"Clients that are currently disconnected (or in the process of reconnecting) won't receive the event. Storing this event somewhere (in a database, for example) is up to you, depending on your use case.")),(0,o.yg)("h2",{id:"to-all-connected-clients-except-the-sender"},"To all connected clients except the sender"),(0,o.yg)(r.A,{alt:"Broadcasting to all connected clients excepting the sender",sources:{light:(0,s.A)("/images/broadcasting2.png"),dark:(0,s.A)("/images/broadcasting2-dark.png")},mdxType:"ThemedImage"}),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},'io.on("connection", (socket) => {\n  socket.broadcast.emit("hello", "world");\n});\n')),(0,o.yg)("admonition",{type:"note"},(0,o.yg)("p",{parentName:"admonition"},"In the example above, using ",(0,o.yg)("inlineCode",{parentName:"p"},'socket.emit("hello", "world")')," (without ",(0,o.yg)("inlineCode",{parentName:"p"},"broadcast"),' flag) would send the event to "client A". You can find the list of all the ways to send an event in the ',(0,o.yg)("a",{parentName:"p",href:"/docs/v4/emit-cheatsheet/"},"cheatsheet"),".")),(0,o.yg)("h2",{id:"with-acknowledgements"},"With acknowledgements"),(0,o.yg)("p",null,"Starting with Socket.IO 4.5.0, you can now broadcast an event to multiple clients and expect an acknowledgement from each one of them:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},'io.timeout(5000).emit("hello", "world", (err, responses) => {\n  if (err) {\n    // some clients did not acknowledge the event in the given delay\n  } else {\n    console.log(responses); // one response per client\n  }\n});\n')),(0,o.yg)("p",null,"All broadcasting forms are supported:"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"in a room")),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},'io.to("room123").timeout(5000).emit("hello", "world", (err, responses) => {\n  // ...\n});\n')),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"from a specific ",(0,o.yg)("inlineCode",{parentName:"li"},"socket"))),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},'socket.broadcast.timeout(5000).emit("hello", "world", (err, responses) => {\n  // ...\n});\n')),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"in a namespace")),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},'io.of("/the-namespace").timeout(5000).emit("hello", "world", (err, responses) => {\n  // ...\n});\n')),(0,o.yg)("h2",{id:"with-multiple-socketio-servers"},"With multiple Socket.IO servers"),(0,o.yg)("p",null,"Broadcasting also works with multiple Socket.IO servers."),(0,o.yg)("p",null,"You just need to replace the default adapter by the ",(0,o.yg)("a",{parentName:"p",href:"/docs/v4/redis-adapter/"},"Redis Adapter")," or another ",(0,o.yg)("a",{parentName:"p",href:"/docs/v4/adapter/"},"compatible adapter"),"."),(0,o.yg)(r.A,{alt:"Broadcasting with Redis",sources:{light:(0,s.A)("/images/broadcasting-redis.png"),dark:(0,s.A)("/images/broadcasting-redis-dark.png")},mdxType:"ThemedImage"}),(0,o.yg)("p",null,"In certain cases, you may want to only broadcast to clients that are connected to the current server. You can achieve this with the ",(0,o.yg)("inlineCode",{parentName:"p"},"local")," flag:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},'io.local.emit("hello", "world");\n')),(0,o.yg)(r.A,{alt:"Broadcasting with Redis but local",sources:{light:(0,s.A)("/images/broadcasting-redis-local.png"),dark:(0,s.A)("/images/broadcasting-redis-local-dark.png")},mdxType:"ThemedImage"}),(0,o.yg)("p",null,"In order to target specific clients when broadcasting, please see the documentation about ",(0,o.yg)("a",{parentName:"p",href:"/docs/v4/rooms/"},"Rooms"),"."))}u.isMDXComponent=!0}}]);